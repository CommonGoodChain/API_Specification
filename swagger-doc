{
  "swagger": "2.0",
  "info": {
    "description": "Welcome to ComGo, please create an account or log in to start tracking your impact. The ComGo API contains information.",
    "version": "1.0.0",
    "title": "Swagger Comgo",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "support@comgo.io"
    }
  },
  "host": "https://localhost:3001",
  "basePath": "",
  "tags": [
    {
      "name": "Projects",
      "description": "Project Related Operations"
    },
    {
      "name": "Milestones",
      "description": "Milestones Related Operations"
    },
    {
      "name": "Users",
      "description": "User Related Operations"
    },
    {
      "name": "MasterTables",
      "description": "Master Tables Related Operations"
    },
    {
      "name": "Donations",
      "description": "Donation Related Operations"
    },
    {
      "name": "Activities",
      "description": "Activity Related Operations"
    },
    {
      "name": "CRM",
      "description": "CRM Related Operations"
    },
    {
      "name": "Files",
      "description": "File Related Operations"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projects/create": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "This API Creates a Project.Foundation or NGO can creates a Project.",
        "description": "This API Creates a Project.Foundation or NGO can creates a Project.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Creating Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectscreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/createProject"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projects/updateProject": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "This API Updates a Project.Foundation or NGO can updates a Project.",
        "description": "This API Updates a Project.Foundation or NGO can updates a Project.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for updating project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectsupdateProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/updateProject"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projects/getAllProjects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "This API returns list of Published Projects",
        "description": "This API returns list of Published Projects",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/getAllProjects"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/allById/{projId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "This API returns Project Details.",
        "description": "This API returns Project Details.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/proectsallById"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/publishedProjectFiles/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Thid API returns Project (project supporters and past events)Files name",
        "description": "This API returns Project (project supporters and past events)Files name",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/projectFiles"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/getOrganizationProject/{foundationCompany}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "This API returns Projects created by organization users whose roles are foundation or ngo.",
        "description": "This API returns Projects created by organization users whose roles are foundation or ngo.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "foundationCompany",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/getOrganizationProjects"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
            "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/getProjectByFunctionName?{{functionName}}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "This API returns Projects By Function name.",
        "description": "This API returns Projects By Function name.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/getProjectByFunctionName"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/deleteProjectImage": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "This API Deletes Project Image",
        "description": "This API Deletes Project Image",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Deleting Project Image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectsdeleteProjectImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/deleteProjectImage"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projects/BKCpublishProject": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "This API Publishes Project.It is done by foundation only.",
        "description": "This API Publishes Project.It is done by foundation only.",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Publishing the Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectsBKCpublishProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successy",
            "schema": {
              "$ref": "#/responses/projectsBKCpublishProject"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projects/approveProject/{projectId}/{status}/{projectName}": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "This API Approves the Project.It is done by Board",
        "description": "This API Approves the Project.It is done by Board",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Body contains remarks of project approval",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectsapproveProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/projectsapproveProject"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projectimage/allByProjId/{projId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "This API returns Project Images",
        "description": "This API returns Project Images",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/projectimageallByProjId"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/create": {
      "post": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API creates a Milestone.It is done by foundation or ngo",
        "description": "This API creates a Milestone.It is done by foundation or ngo",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Creating Milestone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/milestonecreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/milestonecreate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/milestone/": {
      "put": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API Updates Milestone.It is done by foundation or ngo.",
        "description": "This API Updates Milestone.It is done by foundation or ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for updating milestone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/milestoneupdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Milestone Updation Successful",
            "schema": {
              "$ref": "#/responses/milestoneupdate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/milestone/allById/{_projId}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns all the Milestones of particular project from database.",
        "description": "This API returns all the Milestones of particular project from database.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_projId",
            "in": "path",
            "description": "project Id of Project",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/milestoneallById"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/getAllAudit/{_projId}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns Audit trail of Project from database",
        "description": "This API returns Audit trail of Project database",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_projId",
            "in": "path",
            "description": "project Id",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/milestonegetAllAudit"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/allByName/{_projId}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns all the Milestones of particular project from Database.",
        "description": "This API returns all the Milestones of particular project from Database.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_projId",
            "in": "path",
            "description": "project Id",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/milestoneallById"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/BKCAllByParams/{id}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns a Projects,Milestone or Activities",
        "description": "This API returns a Projects,Milestone or Activities",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Projects,milestones or activities successful",
            "schema": {
              "$ref": "#/responses/projectsgetAllProjects"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Projects,milestones or activities."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/all": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns all Milestones",
        "description": "This API returns all Milestones",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Milestones Successful",
            "schema": {
              "$ref": "#/responses/milestoneall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get all Milestones"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/BKCGetAll/{_projId}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API Returns Transaction Details(Audit Trail) of a Project",
        "description": "This API Returns Transaction Details(Audit Trail) of a Project",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_projId",
            "in": "path",
            "description": "project Id",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Transaction Details Successful",
            "schema": {
              "$ref": "#/responses/milestoneBKCGetAll"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Transaction Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/{_id}/{projectId}/{milestoneId}/{milestone}/{role}": {
      "delete": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API Deletes Milestone",
        "description": "This API Deletes Milestone",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Document Id",
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "description": "Milestone Id",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "milestone",
            "in": "path",
            "description": "Milestone Name",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "role",
            "in": "path",
            "description": "Role of User",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Milestone Deleted Successfuly",
            "schema": {
              "$ref": "#/responses/apimilestoneDelete"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to delete Milestone"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/milestone/allByMilestoneId/{milestoneId}": {
      "get": {
        "tags": [
          "Milestones"
        ],
        "summary": "This API returns Milestone Details",
        "description": "This API returns Milestone Details",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "description": "Milestone Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Milestone Details Successful",
            "schema": {
              "$ref": "#/responses/milestoneallByMilestoneId"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Milestone Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/getFoundationUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns all users",
        "description": "This API returns all users",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all Users Details",
            "schema": {
              "$ref": "#/responses/usersgetFoundationUsers"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to return all Users Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/getNgoUsers/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns Details of User created by  ngo",
        "description": "This API returns Details of User created by ngo",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name user who created users",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Details of User created by ngo",
            "schema": {
              "$ref": "#/responses/usersgetNgoUsers"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to return Details of User created by ngo"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/getAllUser": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns all foundations",
        "description": "This API returns all foundations",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all Foundations",
            "schema": {
              "$ref": "#/responses/getAllUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get all Foundations"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/approveUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API Activates or Deactivates User.It is done by foundation,admin or ngo.",
        "description": "This API Activates or Deactivates User.It is done by foundation,admin or ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Activating or Deactivating User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersapproveUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed User status",
            "schema": {
              "$ref": "#/responses/usersapproveUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to change User status"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/getAllValidator": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns all the Validators",
        "description": "This API returns all the Validators",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the Validators",
            "schema": {
              "$ref": "#/responses/getAllUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Validators"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/updateProfile": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API updates Organization profile.It is done by foundation of subrole admin and ngo of subrole admin.",
        "description": "This API updates Organization profile.It is done by foundation of subrole admin and ngo of subrole admin.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Updating Organization Profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersupdateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Profile Updated Successfully",
            "schema": {
              "$ref": "#/responses/usersupdateProfile"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update organization profile"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/getUserDetails": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns User Details",
        "description": "This API returns User Details",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body consist of username",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getUserDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Details Successful",
            "schema": {
              "$ref": "#/responses/getUserDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get User Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/changePassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API Changes User Password",
        "description": "This API Changes User Password",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Changing User Password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userschangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password Changed Successfully",
            "schema": {
              "$ref": "#/responses/userschangePassword"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to change password"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/checkPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API checks old Password",
        "description": "This API checks old Password",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for checking old Password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userscheckPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password matched Successfully",
            "schema": {
              "$ref": "#/responses/userscheckPassword"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Password does not match."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/updateUserDetails": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API updates User Details",
        "description": "This API updates User Details",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Updating User Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersupdateUserDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Details Updated Successfully",
            "schema": {
              "$ref": "#/responses/usersupdateUserDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update user details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/getOrganization/{orgName}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns users of a Organization",
        "description": "This API returns users of a Organization",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get users of Organization",
            "schema": {
              "$ref": "#/responses/getOrganizationDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get users of Organization"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/getOrganizationDetails/{orgName}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns Details of foundation admin user of Organization",
        "description": "This API returns Details of foundation admin user of Organization",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Details of foundation admin user of Organization",
            "schema": {
              "$ref": "#/responses/getOrganizationDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Details of foundation admin user of Organization"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API does Registration of user.This api is used by admin,foundation,ngo and donor",
        "description": "This API does Registration of user.This api is used by admin,foundation,ngo and donor",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for registration of user in Comgo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration Successful",
            "schema": {
              "$ref": "#/responses/register"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Register User"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API is used to login.",
        "description": "This API is used to login.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Used for login into Comgo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful",
            "schema": {
              "$ref": "#/responses/login"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Username or Password is incorrect"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API is used to Logout user",
        "description": "This API is used to Logout user",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout Successful",
            "schema": {
              "$ref": "#/responses/userslogout"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Filed to Logout"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/insertTokenDetails": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API does insertion of Paypal Token.It is used by foundation whose subrole is admin.",
        "description": "This API does insertion of Paypal Token.It is used by foundation whose subrole is admin.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for insertion of Paypal Token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersinsertTokenDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paypal Token Inserted Successfully",
            "schema": {
              "$ref": "#/responses/usersinsertTokenDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to insert Paypal Token"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/updateTokenDetails": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API updates Paypal Token.It is used by foundation whose subrole is admin.",
        "description": "This API updates Paypal Token.It is used by foundation whose subrole is admin.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Updating Paypal Token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersupdateTokenDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paypal Token Updated Successfully",
            "schema": {
              "$ref": "#/responses/usersupdateTokenDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update paypal token."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/validateUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API validates if user is present or not.",
        "description": "This API validates if user is present or not.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used to check if user is present.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersvalidateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/responses/usersvalidateUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API changes User Password.",
        "description": "This API changes User Password.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used to Change User Password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersforgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password Changed Successfully",
            "schema": {
              "$ref": "#/responses/usersforgotPassword"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to change password"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/getProjectOwnerUser/{projectOwner}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns Ngo Details",
        "description": "This API returns Ngo Details",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectOwner",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Ngo Details",
            "schema": {
              "$ref": "#/responses/usersgetProjectOwnerUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Ngo Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/users/updateSession": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API updates Current session of user",
        "description": "This API updates Current session of user",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Updating Current session",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersupdateSession"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session Updated Successfully",
            "schema": {
              "$ref": "#/responses/usersupdateSession"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update current session"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/session/name": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns the session values",
        "description": "This API returns the session values",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get session values",
            "schema": {
              "$ref": "#/responses/sessionname"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get session values"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/ngo/all": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns all the Users",
        "description": "The API returns all the Users",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Users",
            "schema": {
              "$ref": "#/responses/getAllUser"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get all Users"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/ngo/getUserDetails": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "This API returns user Details",
        "description": "This API returns user Details",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for getting User Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ngogetUserDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns User Details",
            "schema": {
              "$ref": "#/responses/ngogetUserDetails"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get User Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/projectcommunication/saveEmail": {
      "post": {
        "tags": [
          "CRM"
        ],
        "summary": "This API is used to Send Notification to Donors.It is used by crm.",
        "description": "This API is used to Send Notification to Donors.It is used by crm.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Sending Notification to Donors",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectcommunicationsaveEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification has been send successfully",
            "schema": {
              "$ref": "#/responses/projectcommunicationsaveEmail"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Send Notification"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/country/all": {
      "post": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Country List.",
        "description": "This API returns Country List.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/countryall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/country/countryCodes": {
      "post": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Country Codes",
        "description": "This API returns Country Codes",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/countrycountryCodes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/currency/all": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns all currencies",
        "description": "This API returns all currencies",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/currencyall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/donationType/all": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Donation Type eg.One Time,Monthly",
        "description": "This API returns Donation Type eg.One Time,Monthly",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/donationTypeall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/modeofpayment/all": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Payment Mode eg. Credit Card,Cash",
        "description": "This API returns Payment Mode eg. Credit Card,Cash",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/modeofpaymentall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/getAllSDG": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns all the SDG Types",
        "description": "This API returns all the SDG Types",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/projectsgetAllSDG"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projecttype/all": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Project Type eg.Educational",
        "description": "This API returns Project Type eg.Educational",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/projecttypeall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
           "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/donates/getAllNotification": {
      "get": {
        "tags": [
          "MasterTables"
        ],
        "summary": "This API returns Notification Preference eg. Final Report Only",
        "description": "This API returns Notification Preference eg. Final Report Only",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/donatesgetAllNotification"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
           "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/donates/create": {
      "post": {
        "tags": [
          "Donations"
        ],
        "summary": "Donor donates to Project using this api",
        "description": "Donor donates to Project using this api",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used by Donor to donate to the project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/donatescreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation Successful",
            "schema": {
              "$ref": "#/responses/donatescreate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Donate"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/donates/foundationDonate": {
      "post": {
        "tags": [
          "Donations"
        ],
        "summary": "Foundation donates to the project using this api",
        "description": "Foundation donates to the project using this api",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used by Foundation to donate to the project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/foundationDonate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation Successful",
            "schema": {
              "$ref": "#/responses/foundationDonate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Donate"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/users/getPaymentDetails/{foundationCompany}": {
      "get": {
        "tags": [
          "Donations"
        ],
        "summary": "This API returns Foundation Paypal Token Details",
        "description": "This API returns Foundation Paypal Token Details",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "foundationCompany",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Paypal Token Details",
            "schema": {
              "$ref": "#/responses/usersgetPaymentDetail"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Paypal Token Details"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projectdonation/allFunds": {
      "get": {
        "tags": [
          "Donations"
        ],
        "summary": "This API returns all the Projects",
        "description": "This API returns all the Projects",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all Projects",
            "schema": {
              "$ref": "#/responses/projectdonationallFunds"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get all the Projects"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projectdonation/BKCMyFunds": {
      "get": {
        "tags": [
          "Donations"
        ],
        "summary": "This API returns Project Transactions",
        "description": "This returns Project Transactions",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Transactions",
            "schema": {
              "$ref": "#/responses/projectdonationBKCMyFunds"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Project Transactions"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/alldonor/getMyDonations": {
      "post": {
        "tags": [
          "Donations"
        ],
        "summary": "This API returns a Donor's donations to Projects",
        "description": "This API returns a Donor's donations to Projects",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used to get Donors donations to Projects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alldonorgetMyDonations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Donor donation details successful",
            "schema": {
              "$ref": "#/responses/alldonorgetMyDonations"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Donor donation details successful"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/alldonor/getAllDonorListDB": {
      "post": {
        "tags": [
          "Donations"
        ],
        "summary": "This API returns donors who have donated to particular project.",
        "description": "This API returns donors who have donated to particular project.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used to return donors who have donated to a project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alldonorgetAllDonorListDB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get donors of a project",
            "schema": {
              "$ref": "#/responses/alldonorgetAllDonorListDB"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get donors of a project."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/milestone/createAct": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API creates Activity.It is done by foundation as well as ngo.",
        "description": "This API creates Activity.It is done by foundation as well as ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Creating Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/milestonecreateAct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity Creation Successful",
            "schema": {
              "$ref": "#/responses/milestonecreateAct"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to create Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/activity/updateActivity": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API updates Activity.It is done by foundation as well as ngo.",
        "description": "This API updates Activity.It is done by foundation as well as ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Updating Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activityupdateActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity Updation Successful",
            "schema": {
              "$ref": "#/responses/activityupdateActivity"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/activity/{activityId}/{projectId}/{milestoneId}/{milestoneName}/{activityName}/{role}": {
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "This API deletes Activity.It is done by foundation as well as ngo.",
        "description": "This API deletes Activity.It is done by foundation as well as ngo.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "description": "Milestone Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneName",
            "in": "path",
            "description": "Milestone Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityName",
            "in": "path",
            "description": "Activity Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "path",
            "description": "Role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity Deletion Successful",
            "schema": {
              "$ref": "#/responses/activitydeleteActivity"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to delete Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/activity/allByName/{_projId}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns a Project Activities from DB",
        "description": "This API returns a Project Activities from DB",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_projId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Activites from DB",
            "schema": {
              "$ref": "#/responses/activityallByName"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Activities from db"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/activity/all": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns all the Activities from DB",
        "description": "This API returns all the Activities from DB",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get activities Successful",
            "schema": {
              "$ref": "#/responses/activityall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get activities"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/activity/activityByProjectId/{projectId}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns a Project Activities from DB",
        "description": "This API returns a Project Activities from DB",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Activites from DB",
            "schema": {
              "$ref": "#/responses/activityactivityByProjectId"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Project Activities from db"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/activity/getActivityById/{activityId}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns Acivity by activityId from DB",
        "description": "This API returns Acivity by activityId from DB",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Acivity by activityId from DB",
            "schema": {
              "$ref": "#/responses/activitygetActivityById"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Acivity by activityId from DB"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/activity/approveActivity": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Approve the Activity.It is done by board.",
        "description": "This API is used to Approve the Activity.It is done by board.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Approving Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activityapproveActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity Approved Successfully",
            "schema": {
              "$ref": "#/responses/activityapproveActivity"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to approve the Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/invoices/create": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Add Expense.It is done by Ngo.",
        "description": "This API is used to Add Expense.It is done by Ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Adding Expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/invoicescreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expense added Successfully",
            "schema": {
              "$ref": "#/responses/invoicescreate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to add Expense"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/invoices/": {
      "put": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Update the Expense.It is done by Ngo.",
        "description": "This API is used to Update the Expense.It is done by Ngo.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for updating the Expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateExpense"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expense Updation Successful",
            "schema": {
              "$ref": "#/responses/updateExpense"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update Expense"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/invoices/{_id}": {
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to delete the Expense.It is done by Ngo.",
        "description": "This API is used to delete the Expense.It is done by Ngo.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "description": "document id to delete expense",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expense Deleted Successful",
            "schema": {
              "$ref": "#/responses/deleteExpense"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to delete Expense"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/invoices/allById/{milestoneId}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns Expenses of an activity",
        "description": "This API returns Expenses of an activity",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Activity Expenses Successful",
            "schema": {
              "$ref": "#/responses/invoicesallById"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Activity Expenses"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/invoices/all": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns all the Expenses",
        "description": "This API returns all the Expenses",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all Expenses",
            "schema": {
              "$ref": "#/responses/invoicesall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get all Expenses"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/invoices/getExpenseEdit/{id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns Expense by document Id",
        "description": "This API returns Expense by document Id",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Expense by document Id",
            "schema": {
              "$ref": "#/responses/invoicesgetExpenseEdit"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Expense by document Id"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/BKCFundRequest/{milestoneId}/{projectId}/{activityId}/{fundReq}/{status}/{activityName}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Request Fund.It is done by NGO.",
        "description": "This API is used to Request Fund.It is done by NGO.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundReq",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fund Request has been send",
            "schema": {
              "$ref": "#/responses/milestoneBKCFundRequest"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to send Fund Request"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/milestone/BKCFundReleased/{projectId}/{milestoneId}/{activityId}/{fundBudgeted}/{projectOwner}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to release Fund.It is done by Foundation.",
        "description": "This API is used to release Fund.It is done by Foundation.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundBudgeted",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectOwner",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fund Released Successfully",
            "schema": {
              "$ref": "#/responses/milestoneBKCFundReleased"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to release fund"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/documents/create": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Add Proof.It is done by NGO.",
        "description": "This API is used to Add Proof.It is done by NGO.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Adding Proof",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentscreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Proof Insertion Successful",
            "schema": {
              "$ref": "#/responses/documentscreate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to add Add Proof"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/proofs/create": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to Add Proof Details in Database.It is done by NGO",
        "description": "This API is used to Add Proof Details in Database.It is done by NGO",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Adding Proof Details in Databas",
            "required": true,
            "schema": {
              "$ref": "#/definitions/proofscreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Proof added successfully in Database",
            "schema": {
              "$ref": "#/responses/proofscreate"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to add Proof in Database"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/milestone/updateProofStatus/{milestoneId}/{status}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API Update Milestone status for proof submission.It is done by NGO.",
        "description": "This API Update Milestone status for proof submission.It is done by NGO.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Milestone Updated Successfully",
            "schema": {
              "$ref": "#/responses/milestoneupdateProofStatus"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to update Milestone"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/proofs/all/{activityId}/{projectId}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "This API returns Proof of Activitiy",
        "description": "This API returns Proof of Activity",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Proof of Activity",
            "schema": {
              "$ref": "#/responses/proofsall"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to get Proof of Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/projects/BKCProjectValidation/": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "This API is used to validate the Activity.It is done by Validator.",
        "description": "This API is used to validate the Activity.It is done by Validator.",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Validating Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectsBKCProjectValidation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity Validation Successful",
            "schema": {
              "$ref": "#/responses/projectsBKCProjectValidation"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Validate Activity"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/filesUpload/saveFile":{
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "This API is used to upload a file",
        "description": "This API is used to upload a file",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
           {
            "name": "projectId",
            "in": "query",
            "type": "string"
          },
           {
            "name": "purpose",
            "in": "query",
            "required": true,
            "type": "string"
          },
           {
            "name": "path",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileInformation",
            "in": "formData",
            "description": "Additional data about file",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "File has been uploaded successfully.",
            "schema": {
              "$ref": "#/responses/saveFile"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/filesUpload/saveFile/multiple":{
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "This API is used to upload a file in files parameter. eg It is used to upload multiple files",
        "description": "This API is used to upload a file in files parameter. eg It is used to upload multiple files",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
           {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          },
           {
            "name": "purpose",
            "in": "query",
            "required": true,
            "type": "string"
          },
           {
            "name": "path",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileInformation",
            "in": "formData",
            "description": "Additional data about file",
            "required": false,
            "type": "string"
          },
          {
            "name": "files",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/responses/saveFileMultiple"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
     "/api/filesUpload/defaultImage": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Add Default Image for Project",
        "description": "Add Default Image for Project",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Adding Default Image for Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filesUploaddefaultImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Image for Project Added Successfully",
            "schema": {
              "$ref": "#/responses/projectsBKCProjectValidation"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Add Default Image for Project"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
      "/api/filesUpload/profileImage": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Add Profile Image for Project",
        "description": "Add Profile Image for Project",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Used for Adding Profile Image for Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filesUploadprofileImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Image for Project Added Successfully",
            "schema": {
              "$ref": "#/responses/projectsBKCProjectValidation"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Failed to Add Default Image for Project"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "getUserDetails": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        },
        "sessionCheck": {
          "type": "boolean",
          "example": true
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectscreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "SDG": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Zero hunger"
          },
          "description": "SDG's",
          "format": "string"
        },
        "country": {
          "type": "string",
          "example": "Germany"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-30T18:30:00.000Z"
        },
        "foundationCompany": {
          "type": "string",
          "example": "kf123 org"
        },
        "fundAllocationType": {
          "type": "string",
          "example": "2"
        },
        "fundGoal": {
          "type": "integer",
          "example": 5000
        },
        "lat": {
          "type": "string",
          "example": "50.67054229349088"
        },
        "long": {
          "type": "string",
          "example": "9.563895863014295"
        },
        "ngoId": {
          "type": "string",
          "example": "kn123 org"
        },
        "projectBudget": {
          "type": "integer",
          "example": 10000
        },
        "projectName": {
          "type": "string",
          "example": "testprojectbody"
        },
        "projectOwner": {
          "type": "string",
          "example": "kn123 org"
        },
        "projectType": {
          "type": "string",
          "example": "Educational"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-20T18:30:00.000Z"
        },
        "status": {
          "type": "string",
          "example": "Not Initiated"
        },
        "subRole": {
          "type": "string",
          "example": "admin"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "milestonecreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityCount": {
          "type": "array",
          "items": {},
          "description": "SDG's",
          "format": "string"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "milestone": {
          "type": "string",
          "example": "milestone one"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553862158954"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-26T18:30:00.000Z"
        },
        "fundBudgeted": {
          "type": "integer",
          "example": 0
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-21T18:30:00.000Z"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectsupdateProject": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "SDG": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Zero hunger"
          },
          "description": "SDG's",
          "format": "string"
        },
        "country": {
          "type": "string",
          "example": "Germany"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-30T18:30:00.000Z"
        },
        "foundationCompany": {
          "type": "string",
          "example": "kf123 org"
        },
        "fundAllocationType": {
          "type": "string",
          "example": "2"
        },
        "fundGoal": {
          "type": "integer",
          "example": 5000
        },
        "lat": {
          "type": "string",
          "example": "50.67054229349088"
        },
        "long": {
          "type": "string",
          "example": "9.563895863014295"
        },
        "projectBudget": {
          "type": "integer",
          "example": 10000
        },
        "projectId": {
          "type": "string",
          "example": "Project1548059724389"
        },
        "projectName": {
          "type": "string",
          "example": "testprojectbody"
        },
        "projectOwner": {
          "type": "string",
          "example": "kn123 org"
        },
        "projectType": {
          "type": "string",
          "example": "Educational"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-20T18:30:00.000Z"
        },
        "subRole": {
          "type": "string",
          "example": "admin"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectsdeleteProjectImage": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "element": {
          "type": "string",
          "example": "Bloackchain.jpg816199"
        },
        "oldFilePath": {
          "type": "string",
          "example": "/projectimages/Project1548067054496/Bloackchain.jpg816199"
        },
        "id": {
          "type": "string",
          "example": "5c45b253054863651dcf2b5c"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "milestoneupdate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "milestone": {
          "type": "string",
          "example": "milestone one"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553862158954"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1554112082838"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-26T18:30:00.000Z"
        },
        "status": {
          "type": "string",
          "example": "Milestone Updated"
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-24T18:30:00.000Z"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersapproveUser": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "createdBy": {
          "type": "string",
          "example": "kf123"
        },
        "firstName": {
          "type": "string",
          "example": "Rajesh"
        },
        "regUser": {
          "type": "int64",
          "example": 1
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "status": {
          "type": "string",
          "example": "Activated"
        },
        "username": {
          "type": "string",
          "example": "rajesh3556"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectsapproveProject": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "remarks": {
          "type": "string",
          "example": "approved"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectsBKCpublishProject": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "donorList": {
          "items": {}
        },
        "fundBudgeted": {
          "type": "string",
          "example": "approved"
        },
        "projectId": {
          "type": "string",
          "example": "Project1552545011453"
        },
        "projectName": {
          "type": "string",
          "example": "testPro2"
        },
        "status": {
          "type": "string",
          "example": "Fund Allocated"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersupdateProfile": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "orgTaxId": {
          "type": "string",
          "example": "16"
        },
        "paypal": {
          "type": "string",
          "example": "AWlMGZwpQbS0dq_r2Dt0ejp1TxDm72JD7Pt4Uc2mYlihAE3FU5axxS9wr4HcnVc13gB7TcbYDVLp9Vne"
        },
        "username": {
          "type": "string",
          "example": "kf123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "userschangePassword": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "example": "https://localhost:3010"
        },
        "latitude": {
          "type": "int64",
          "example": 19.0833
        },
        "longitude": {
          "type": "int64",
          "example": 72.9
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "username": {
          "type": "string",
          "example": "kf123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "userscheckPassword": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        },
        "password": {
          "type": "string",
          "example": "12345"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersinsertTokenDetails": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "accountType": {
          "type": "string",
          "example": "sandbox"
        },
        "sandBoxtoken": {
          "type": "string",
          "example": "AWlMGZwpQbS0dq_r2Dt0ejp1TxDm72JD7Pt4Uc2mYlihAE3FU5axxS9wr4HcnVc13gB7TcbYDVLp9Vne"
        },
        "liveToken": {
          "type": "string",
          "example": ""
        },
        "foundationName": {
          "type": "string",
          "example": "kudld org"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersupdateTokenDetails": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "accountType": {
          "type": "string",
          "example": "sandbox"
        },
        "sandBoxtoken": {
          "type": "string",
          "example": "AWlMGZwpQbS0dq_r2Dt0ejp1TxDm72JD7Pt4Uc2mYlihAE3FU5axxS9wr4HcnVc13gB7TcbYDVLp9V"
        },
        "liveToken": {
          "type": "string",
          "example": ""
        },
        "foundationName": {
          "type": "string",
          "example": "kudld org"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersvalidateUser": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        },
        "forgetPasswordUrl": {
          "type": "string",
          "example": "https://localhost:3010/pages/auth/forgot-password-3"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersforgotPassword": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "1234"
        },
        "username": {
          "type": "string",
          "example": "kf123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersupdateSession": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ngogetUserDetails": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "kf123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "usersupdateUserDetails": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "username": {
          "type": "string",
          "example": "foundation"
        },
        "userData": {
          "properties": {
            "country": {
              "type": "string",
              "example": "India"
            },
            "countryCode": {
              "type": "string",
              "example": "+91"
            },
            "email": {
              "type": "string",
              "example": "kuldeep@cateina.com"
            },
            "idNumber": {
              "type": "string",
              "example": "wq3562"
            },
            "phone": {
              "type": "string",
              "example": "+917045870802"
            },
            "url": {
              "type": "string",
              "example": ""
            }
          }
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "register": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "India"
        },
        "countryCode": {
          "type": "string",
          "example": "+91"
        },
        "createFlag": {
          "type": "int64",
          "example": 0
        },
        "createdBy": {
          "type": "string",
          "example": "kf123"
        },
        "email": {
          "type": "string",
          "example": "kuldeep@cateina.com"
        },
        "firstName": {
          "type": "string",
          "example": "kuldeep"
        },
        "firstSurname": {
          "type": "string",
          "example": "narvekar"
        },
        "foundationCompany": {
          "type": "string",
          "example": "kf123 org"
        },
        "foundationName": {
          "type": "string",
          "example": "kf123 org"
        },
        "idNumber": {
          "type": "string",
          "example": "3677"
        },
        "lat": {
          "type": "int64",
          "example": 19.0833
        },
        "location": {
          "type": "string",
          "example": ""
        },
        "long": {
          "type": "int64",
          "example": 72.9
        },
        "orgName": {
          "type": "string",
          "example": "kf123 org"
        },
        "phone": {
          "type": "string",
          "example": "+917045870802"
        },
        "regURL": {
          "type": "string",
          "example": "https://localhost:3010"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "secondSurname": {
          "type": "string",
          "example": ""
        },
        "subRole": {
          "type": "string",
          "example": "user"
        },
        "url": {
          "type": "string",
          "example": ""
        },
        "username": {
          "type": "string",
          "example": "kdjddf"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "donatescreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "aliasName": {
          "type": "string",
          "example": "kd123"
        },
        "amount": {
          "type": "int64",
          "example": 2
        },
        "anonymousUser": {
          "type": "string",
          "example": ""
        },
        "donationDate": {
          "type": "string",
          "example": "2019-04-08T18:30:00.000Z"
        },
        "donationType": {
          "type": "string",
          "example": "One Time"
        },
        "donorId": {
          "type": "int64",
          "example": 1554700864525
        },
        "fromDate": {
          "type": "string",
          "example": "2019-04-08T18:30:00.000Z"
        },
        "notificationMode": {
          "type": "string",
          "example": "both"
        },
        "notificationPreference": {
          "type": "string",
          "example": "Final Report Only"
        },
        "projectCurrency": {
          "type": "int64",
          "example": "EUR"
        },
        "projectId": {
          "type": "string",
          "example": "Project1544527842064"
        },
        "projectName": {
          "type": "string",
          "example": "check health for fund"
        },
        "projectOwner": {
          "type": "string",
          "example": "kn123 org"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "foundationDonate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "aliasName": {
          "type": "string",
          "example": "kf123"
        },
        "amount": {
          "type": "int64",
          "example": 2
        },
        "anonymousUser": {
          "type": "string",
          "example": ""
        },
        "donationDate": {
          "type": "string",
          "example": "2019-04-08T18:30:00.000Z"
        },
        "donorId": {
          "type": "int64",
          "example": 1554703478614
        },
        "fileName": {
          "type": "string",
          "example": ""
        },
        "fromDate": {
          "type": "string",
          "example": "2019-04-08T18:30:00.000Z"
        },
        "modeOfPayment": {
          "type": "string",
          "example": "Self"
        },
        "projectCurrency": {
          "type": "int64",
          "example": "USD"
        },
        "projectId": {
          "type": "string",
          "example": "Project1552546313175"
        },
        "projectName": {
          "type": "string",
          "example": "testPro3"
        },
        "referenceNo": {
          "type": "string",
          "example": "62565"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "alldonorgetMyDonations": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "userName": {
          "type": "string",
          "example": "kd123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "alldonorgetAllDonorListDB": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "projectId": {
          "type": "string",
          "example": "Project1552546313175"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectcommunicationsaveEmail": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "mail"
        },
        "finalRepOly": {
          "type": "string",
          "example": "Final Report Only"
        },
        "fundGoal": {
          "type": "string",
          "example": ""
        },
        "fundRaised": {
          "type": "string",
          "example": ""
        },
        "projectId": {
          "type": "string",
          "example": "Project1552546313175"
        },
        "projectName": {
          "type": "string",
          "example": "mail"
        },
        "sms": {
          "type": "string",
          "example": "sms"
        },
        "subject": {
          "type": "string",
          "example": "sub"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "milestonecreateAct": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityBudget": {
          "type": "int64",
          "example": 100
        },
        "activityName": {
          "type": "string",
          "example": "activity"
        },
        "completionCriteria": {
          "type": "string",
          "example": "good"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-25T18:30:00.000Z"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1554293504790"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553862158954"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "secondaryValidation": {
          "type": "boolean",
          "example": false
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-22T18:30:00.000Z"
        },
        "validationCheck": {
          "type": "string",
          "example": "pdf"
        },
        "validatorId": {
          "type": "string",
          "example": "kv123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "activityupdateActivity": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityBudget": {
          "type": "int64",
          "example": 110
        },
        "activityId": {
          "type": "string",
          "example": "Activity1554722243609"
        },
        "activityName": {
          "type": "string",
          "example": "activity two"
        },
        "completionCriteria": {
          "type": "string",
          "example": "good"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-25T18:30:00.000Z"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1554293504790"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553862158954"
        },
        "role": {
          "type": "string",
          "example": "foundation"
        },
        "secondaryValidation": {
          "type": "boolean",
          "example": false
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-22T18:30:00.000Z"
        },
        "status": {
          "type": "string",
          "example": "Activity Updated"
        },
        "validationCheck": {
          "type": "string",
          "example": "pdf"
        },
        "validatorId": {
          "type": "string",
          "example": "kv123"
        },
        "_id": {
          "type": "string",
          "example": "5cab2dc3d1d1dc49383719b4"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "activityapproveActivity": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityBudget": {
          "type": "int64",
          "example": 100
        },
        "activityFundAllocated": {
          "type": "int64",
          "example": 0
        },
        "activityFundReleased": {
          "type": "int64",
          "example": 0
        },
        "activityFundRequested": {
          "type": "int64",
          "example": 0
        },
        "activityId": {
          "type": "string",
          "example": "Activity1554720658954"
        },
        "activityImage": {
          "type": "string",
          "example": ""
        },
        "activityName": {
          "type": "string",
          "example": "activity"
        },
        "approved": {
          "type": "boolean",
          "example": false
        },
        "docType": {
          "type": "string",
          "example": "Activity"
        },
        "endDate": {
          "type": "string",
          "example": "2019-01-24T18:30:00.000Z"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1554293504790"
        },
        "partialValidation": {
          "type": "boolean",
          "example": false
        },
        "projectId": {
          "type": "string",
          "example": "Project1553862158954"
        },
        "proofImage": {
          "type": "string",
          "example": ""
        },
        "remarks": {
          "type": "boolean",
          "example": "approve"
        },
        "secondaryValidation": {
          "type": "boolean",
          "example": false
        },
        "startDate": {
          "type": "string",
          "example": "2019-01-21T18:30:00.000Z"
        },
        "status": {
          "type": "string",
          "example": "Budgeted"
        },
        "statusFlag": {
          "type": "boolean",
          "example": true
        },
        "transactionLoc": {
          "properties": {
            "latitude": {
              "type": "string",
              "example": "1"
            },
            "longitude": {
              "type": "string",
              "example": "2"
            }
          }
        },
        "validation": {
          "type": "boolean",
          "example": false
        },
        "validatorId": {
          "type": "string",
          "example": "kv123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "invoicescreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityId": {
          "type": "string",
          "example": "Activity1553843923785"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "expenseItem": {
          "type": "string",
          "example": "expense"
        },
        "status": {
          "type": "string",
          "example": "Not Approved"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "updateExpense": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityId": {
          "type": "string",
          "example": "Activity1553843923785"
        },
        "description": {
          "type": "string",
          "example": "goods"
        },
        "expenseItem": {
          "type": "string",
          "example": "expense"
        },
        "status": {
          "type": "string",
          "example": "Not Approved"
        },
        "_id": {
          "type": "string",
          "example": "5cadc4eb5bc2c2771e8eba58"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "documentscreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "documentPath": {
          "type": "string",
          "example": "/uploadDoc/Project1553841057344/Milestone1553843636509/"
        },
        "allId": {
          "properties": {
            "activityId": {
              "type": "string",
              "example": "Activity1553843923785"
            },
            "activityName": {
              "type": "string",
              "example": "Educating adults in rural"
            },
            "milestoneId": {
              "type": "string",
              "example": "Milestone1553843636509"
            },
            "projectId": {
              "type": "string",
              "example": "Project1553841057344"
            },
            "projectName": {
              "type": "string",
              "example": "Help Poor"
            },
            "role": {
              "type": "string",
              "example": "ngo"
            }
          }
        },
        "documentHash": {
          "type": "string",
          "example": "3449c9e5e332f1dbb81505cd739fbf3f"
        },
        "documentName": {
          "type": "string",
          "example": "sample.pdf"
        },
        "supplierMobNo": {
          "type": "string",
          "example": ""
        },
        "supplierName": {
          "type": "string",
          "example": ""
        },
        "secondaryValidation": {
          "type": "boolean",
          "example": true
        },
        "role": {
          "type": "string",
          "example": "ngo"
        },
        "username": {
          "type": "string",
          "example": "kn123"
        },
        "smsBody": {
          "type": "string",
          "example": "sms"
        },
        "validatorId": {
          "type": "string",
          "example": ""
        },
        "activityName": {
          "type": "string",
          "example": "Educating adults in rural areas"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "proofscreate": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityId": {
          "type": "string",
          "example": "Activity1553843923785"
        },
        "amount": {
          "type": "int64",
          "example": 2
        },
        "currencyType": {
          "type": "string",
          "example": "USD"
        },
        "documentId": {
          "type": "string",
          "example": "5caee725fcc56362d205365e"
        },
        "documentName": {
          "type": "string",
          "example": "pdf-sample.pdf"
        },
        "expenseId": {
          "type": "string",
          "example": "5c9de032970e755a1745cda6"
        },
        "hash": {
          "type": "string",
          "example": "3449c9e5e332f1dbb81505cd739fbf3f"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1553843636509"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553841057344"
        },
        "proofType": {
          "type": "string",
          "example": "pdf"
        },
        "remarks": {
          "type": "string",
          "example": "good"
        },
        "smsBody": {
          "type": "string",
          "example": "sms"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "projectsBKCProjectValidation": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "activityId": {
          "type": "string",
          "example": "Activity1553843923785"
        },
        "check": {
          "type": "string",
          "example": "Validation Successful"
        },
        "milestoneId": {
          "type": "string",
          "example": "Milestone1553843636509"
        },
        "projectId": {
          "type": "string",
          "example": "Project1553841057344"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "filesUploadsaveFile":{
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "filePath": {
          "type": "string",
          "example": "/ProjectFiles/Project1555325476742/ProjectPastEvents/sample.pdf302616"
        },
        "projectId": {
          "type": "string",
          "example": "Project1555325476742"
        },
        "fileName": {
          "type": "string",
          "example": "sample.pdf302616"
        },
        "type": {
          "type": "string",
          "example": "application/pdf"
        },
         "projectRelation": {
          "type": "string",
          "example": "Past Event"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "filesUploaddefaultImage":{
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "projectId": {
          "type": "string",
          "example": "Project134"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "filesUploadprofileImage":{
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "projectId": {
          "type": "string",
          "example": "Project1556621658540"
        },
         "fileName": {
          "type": "string",
          "example": "sports.jpg856181"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
     "errorResponse": {
         "type": "object",
         "properties": {
            "code": {
               "type": "integer",
               "format": "int32"
            },
            "message": {
               "type": "string"
            }
         }
      }
  },
  "responses": {
    "login": {
      "required": [],
      "properties": {
        "username": {
          "type": "string",
          "description": "You will get username.",
          "format": "string"
        },
        "password": {
          "type": "string",
          "description": "You will get blank password.",
          "format": "string"
        },
        "bcData": {
          "properties": {
            "success": {
              "type": "boolean",
              "description": "You will get success value.",
              "format": "boolean"
            },
            "secret": {
              "type": "string",
              "description": "You will get secret.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "You will get enrollment message.",
              "format": "string"
            },
            "token": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            }
          }
        },
        "userToken": {
          "type": "string",
          "description": "You will get bkc token.",
          "format": "string"
        },
        "user": {
          "required": [],
          "properties": {
            "_id": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "secondSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "email": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "username": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "role": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "url": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "idNumber": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "countryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "phone": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "country": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "location": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createFlag": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "int64"
            },
            "foundationName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createdBy": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "foundationCompany": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "subRole": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "mobileNoWithoutCountryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "lat": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "long": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regURL": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "profile": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "hash": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regUser": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "int64"
            },
            "orgLegalName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgTaxId": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "paypal": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "emailBody": {
              "type": "null",
              "description": "null data.",
              "format": "string"
            }
          },
          "logoPath": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          }
        },
        "logoPath": {
          "type": "string",
          "description": "Path of Organization Logo.",
          "format": "string"
        }
      }
    },
    "getAllUser": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "foundationName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "emailBody": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          }
        }
      }
    },
    "getOrganizationDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "foundationName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "mobileNoWithoutCountryCode": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "orgLegalName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "orgTaxId": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "paypal": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          }
        }
      }
    },
    "getUserDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "foundationName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "mobileNoWithoutCountryCode": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "You will get logo path.",
            "format": "int64"
          },
          "orgLegalName": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "orgTaxId": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          },
          "paypal": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          }
        }
      }
    },
    "createProject": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Project Creation status",
          "format": "string",
          "example": "Project created."
        },
        "projectId": {
          "type": "string",
          "description": "Project Id",
          "format": "string",
          "example": "Project1548059724389"
        }
      }
    },
    "updateProject": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Project Updation status",
          "format": "string",
           "example": "Project Updated"
        },
          "projectId": {
          "type": "string",
          "description": "Project Id",
          "format": "string",
          "example": "Project1548059724389"
        }
      }
    },
    "getAllProjects": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Database document id",
            "format": "string",
            "example":"5c7e1f3208517721c073a294"
          },
          "projectOwner": {
            "type": "string",
            "description": "Project Owner Name",
            "format": "string",
            "example":"organization"
          },
          "fundGoal": {
            "type": "integer",
            "description": "Fund Goal of Project",
            "format": "int64",
            "example":5000
          },
          "projectBudget": {
            "type": "string",
            "description": "Project Budget",
            "format": "string",
            "example":10000
          },
          "currency": {
            "type": "string",
            "description": "Currency of Project",
            "format": "string",
            "example":"USD"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of project",
            "format": "string",
            "example":"2019-04-30T18:30:00.000Z"
          },
          "endDate": {
            "type": "string",
            "description": "End date of project",
            "format": "string",
            "example":"2019-05-30T18:30:00.000Z"
          },
          "country": {
            "type": "string",
            "description": "Country of the project",
            "format": "string",
            "example":"India"
          },
          "projectName": {
            "type": "string",
            "description": "Name of Project",
            "format": "string",
            "example":"Agriculture"
          },
          "projectType": {
            "type": "string",
            "description": "Type of Project",
            "format": "string",
            "example":"Agricultural"
          },
          "description": {
            "type": "string",
            "description": "Project Description.",
            "format": "string",
            "example":"Provide fund for agriculture"
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "format": "string",
            "example":"foundation"
          },
          "ngoId": {
            "type": "string",
            "description": "Project Owner",
            "format": "string",
             "example":"organization"
          },
          "foundationCompany": {
            "type": "string",
            "description": "Organization name of foundation",
            "format": "string",
             "example":"Organization"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string",
             "example":"admin"
          },
          "lat": {
            "type": "string",
            "description": "latitude on map",
            "format": "string",
             "example":"30.90010874897957"
          },
          "long": {
            "type": "string",
            "description": "longitude on map",
            "format": "string",
             "example":"75.88333884662507"
          },
          "status": {
            "type": "string",
            "description": "status of project",
            "format": "string",
             "example":"Fund Allocated"
          },
          "fundAllocationType": {
            "type": "string",
            "description": "Type of Fund Allocation",
            "format": "string",
             "example":2
          },
           "SDG": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Flag for Fund Allocation",
              "format": "string",
               "example":"5c7e1f3208517721c073a294"
            }
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
             "example":"Project1551769394637"
          },
          "flagFundAllocation": {
            "type": "string",
            "description": "Flag for Fund Allocation",
            "format": "string",
             "example":"Auto"
          },
          "published": {
            "type": "string",
            "description": "Published Status",
            "format": "boolean",
             "example":"5c7e1f3208517721c073a294"
          }
        }
      }
    },
    "proectsallById": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Database document id",
            "format": "string",
            "example": "5c7e1f3208517721c073a294"
          },
           "projectOwner": {
            "type": "string",
            "description": "Project Owner Name",
            "format": "string",
            "example": "organization"
          },
          "fundGoal": {
            "type": "integer",
            "description": "Fund Goal of Project",
            "format": "int64",
            "example": 5000
          },
           "projectBudget": {
            "type": "string",
            "description": "Project Budget",
            "format": "string",
            "example": 10000
          },
           "currency": {
            "type": "string",
            "description": "Currency of Project",
            "format": "string",
            "example": "USD"
          },
           "startDate": {
            "type": "string",
            "description": "Start date of project",
            "format": "string",
            "example": "5c7e1f3208517721c073a294"
          },
           "endDate": {
            "type": "string",
            "description": "End date of project",
            "format": "string",
            "example": "2019-05-30T18:30:00.000Z"
          },
           "country": {
            "type": "string",
            "description": "Country of the project",
            "format": "string",
            "example": "India"
          },
           "projectName": {
            "type": "string",
            "description": "Name of Project",
            "format": "string",
            "example": "Agriculture"
          },
          "projectType": {
            "type": "string",
            "description": "Type of Project",
            "format": "string",
            "example": "Agricultural"
          },
          "description": {
            "type": "string",
            "description": "Project Description.",
            "format": "string",
            "example": "Provide fund for agriculture"
          },
           "role": {
            "type": "string",
            "description": "Role of the user",
            "format": "string",
            "example": "foundation"
          },
          "ngoId": {
            "type": "string",
            "description": "Project Owner",
            "format": "string",
            "example": "organization"
          },
           "foundationCompany": {
            "type": "string",
            "description": "Organization name of foundation",
            "format": "string",
            "example": "Organization"
          },
           "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string",
            "example": "admin"
          },
          "lat": {
            "type": "string",
            "description": "latitude on map",
            "format": "string",
            "example": 30.90010874897957
          },
          "long": {
            "type": "string",
            "description": "longitude on map",
            "format": "string",
            "example": "75.88333884662507"
          },
          "status": {
            "type": "string",
            "description": "status of project",
            "format": "string",
            "example": "Fund Allocated"
          },
          "fundAllocationType": {
            "type": "string",
            "description": "Type of Fund Allocation",
            "format": "string",
            "example": "2"
          },
          "SDG": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "SDG Type",
              "format": "string",
              "example": "Responsible consumption and production"
            }
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example": "Project1551769394637"
          },
          "flagFundAllocation": {
            "type": "string",
            "description": "Fund allocation Type of Project",
            "format": "string",
            "example": "Auto"
          },
          "published": {
            "type": "string",
            "description": "Project Published status",
            "format": "string",
            "example": "Auto"
          }
        }
      }
    },
    "projectFiles": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Database document id",
            "format": "string",
            "example":"5ce8f6469b83f050834fc032"
          },
          "filePath": {
            "type": "string",
            "description": "Path of file",
            "format": "string",
            "example":"/ProjectFiles/Project1544527842064/ProjectPastEvents/pdf-sample.pdf513382"
          },
          "fileName": {
            "type": "string",
            "description": "Name of file",
            "format": "string",
            "example":"pdf-sample.pdf513382"
          },
          "type": {
            "type": "string",
            "description": "Type of file",
            "format": "string",
            "example":"application/pdf"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example":"Project1544527842064"
          },
          "projectRelation": {
            "type": "string",
            "description": "Type of document for project",
            "format": "string",
            "example":"Past Event"
          }
        }
      }
    },
    "getOrganizationProjects": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Database document id",
            "format": "string",
            "example":"5c0f9fe22faaa65194090ed2"
          },
          "projectOwner": {
            "type": "string",
            "description": "Project Owner Name",
            "format": "string",
            "example":"kn123 org"
          },
          "fundGoal": {
            "type": "integer",
            "description": "Fund Goal of Project",
            "format": "int64",
            "example":40000
          },
          "projectBudget": {
            "type": "string",
            "description": "Project Budget",
            "format": "int64",
            "example":50000
          },
          "currency": {
            "type": "string",
            "description": "Currency of Project",
            "format": "string",
            "example":"EUR"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of project",
            "format": "string",
            "example":"2018-12-10T18:30:00.000Z"
          },
          "endDate": {
            "type": "string",
            "description": "End date of project",
            "format": "string",
            "example":"2018-12-24T18:30:00.000Z"
          },
          "country": {
            "type": "string",
            "description": "Country of the project",
            "format": "string",
            "example":"Germany"
          },
          "projectName": {
            "type": "string",
            "description": "Name of Project",
            "format": "string",
            "example":"check health for fund"
          },
          "projectType": {
            "type": "string",
            "description": "Type of Project",
            "format": "string",
            "example":"Health Care"
          },
          "description": {
            "type": "string",
            "description": "Project Description.",
            "format": "string",
            "example":"good"
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "format": "string",
            "example":"foundation"
          },
          "ngoId": {
            "type": "string",
            "description": "Project Owner",
            "format": "string",
            "example":"kn123 org"
          },
          "foundationCompany": {
            "type": "string",
            "description": "Organization name of foundation",
            "format": "string",
            "example":"kf123 org"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string",
            "example":"admin"
          },
          "lat": {
            "type": "string",
            "description": "latitude on map",
            "format": "string",
            "example":"34.88593094075317"
          },
          "long": {
            "type": "string",
            "description": "longitude on map",
            "format": "string",
            "example":"87.36328125"
          },
          "status": {
            "type": "string",
            "description": "status of project",
            "format": "string",
            "example":"Fund Allocated"
          },
          "fundAllocationType": {
            "type": "string",
            "description": "Type of Fund Allocation",
            "format": "string",
            "example":"2"
          },
          "SDG": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "SDG Type",
              "format": "string",
              "example":"Zero hunger"
            }
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example":"Project1544527842064"
          },
          "flagFundAllocation": {
            "type": "string",
            "description": "Flag for Fund Allocation",
            "format": "string",
            "example":"Auto"
          }
        }
      }
    },
    "getProjectByFunctionName": {
      "type": "array",
      "items": {
        "properties": {
          "Key": {
            "type": "string",
            "description": "Project",
            "format": "string"
          },
          "Record": {
            "properties": {
              "docType": {
                "type": "string",
                "description": "Type Of Document",
                "format": "string"
              },
              "projectId": {
                "type": "string",
                "description": "Project Id",
                "format": "string"
              },
              "projectName": {
                "type": "string",
                "description": "Project Name",
                "format": "string"
              },
              "projectType": {
                "type": "string",
                "description": "Type of Project",
                "format": "string"
              },
              "flag": {
                "type": "string",
                "description": "Flag for Fund Allocated",
                "format": "string"
              },
              "milestones": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "docType": {
                      "type": "string",
                      "description": "Document Type",
                      "format": "string"
                    },
                    "milestoneName": {
                      "type": "string",
                      "description": "Milestone Name",
                      "format": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Start Date of Milestone",
                      "format": "string"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "End Date of milestone",
                      "format": "string"
                    },
                    "milestoneId": {
                      "type": "string",
                      "description": "Milestone Id",
                      "format": "string"
                    },
                    "fundBudgeted": {
                      "type": "integer",
                      "description": "Fund Budgeted Amount",
                      "format": "int64"
                    },
                    "fundAllocated": {
                      "type": "integer",
                      "description": "Fund Allocated Amount",
                      "format": "int64"
                    },
                    "fundRequested": {
                      "type": "integer",
                      "description": "Fund Requested Amount",
                      "format": "int64"
                    },
                    "fundReleased": {
                      "type": "integer",
                      "description": "Fund Released Amount",
                      "format": "int64"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "docType": {
                          "type": "string",
                          "description": "document Type",
                          "format": "string"
                        },
                        "activityName": {
                          "type": "string",
                          "description": "activity name",
                          "format": "string"
                        },
                        "startDate": {
                          "type": "string",
                          "description": "start date of activity",
                          "format": "string"
                        },
                        "endDate": {
                          "type": "string",
                          "description": "end date of activity",
                          "format": "string"
                        },
                        "activityBudget": {
                          "type": "integer",
                          "description": "activity Budget",
                          "format": "int64"
                        },
                        "activityFundAllocated": {
                          "type": "integer",
                          "description": "fund allocated to activity",
                          "format": "int64"
                        },
                        "activityFundReleased": {
                          "type": "integer",
                          "description": "fund released to activity",
                          "format": "strint64ing"
                        },
                        "activityFundRequested": {
                          "type": "integer",
                          "description": "fund requested to activity",
                          "format": "int64"
                        },
                        "activityId": {
                          "type": "string",
                          "description": "activity id",
                          "format": "string"
                        },
                        "activityImage": {
                          "type": "string",
                          "description": "",
                          "format": "string"
                        },
                        "proofImage": {
                          "type": "string",
                          "description": "",
                          "format": "string"
                        },
                        "validation": {
                          "type": "boolean",
                          "description": "validation status",
                          "format": "boolean"
                        },
                        "status": {
                          "type": "string",
                          "description": "activity status",
                          "format": "string"
                        },
                        "validatorId": {
                          "type": "string",
                          "description": "validator id",
                          "format": "string"
                        },
                        "secondaryValidation": {
                          "type": "boolean",
                          "description": "secondary validator",
                          "format": "boolean"
                        },
                        "partialValidation": {
                          "type": "boolean",
                          "description": "partial validation",
                          "format": "boolean"
                        },
                        "transactionLoc": {
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "type": "string",
                              "description": "latitude of transaction",
                              "format": "string"
                            },
                            "longitude": {
                              "type": "string",
                              "description": "longitude of transaction",
                              "format": "string"
                            }
                          }
                        },
                        "approved": {
                          "type": "boolean",
                          "description": "approval status",
                          "format": "boolean"
                        },
                        "remarks": {
                          "type": "string",
                          "description": "remarks",
                          "format": "string"
                        }
                      },
                      "description": "Activities"
                    },
                    "milestoneOwner": {
                      "type": "string",
                      "description": "Milestone",
                      "format": "string"
                    },
                    "milestoneManager": {
                      "type": "object",
                      "properties": {
                        "docType": {
                          "type": "string",
                          "description": "Document Type of Milestone",
                          "format": "string"
                        },
                        "ngoId": {
                          "type": "string",
                          "description": "ngo Id",
                          "format": "string"
                        },
                        "ngoUsername": {
                          "type": "string",
                          "description": "ngo username",
                          "format": "string"
                        },
                        "ngoCompany": {
                          "type": "string",
                          "description": "ngo company",
                          "format": "string"
                        },
                        "fundBalance": {
                          "type": "integer",
                          "description": "fund balance",
                          "format": "int64"
                        },
                        "fundReceived": {
                          "type": "integer",
                          "description": "fund received",
                          "format": "int64"
                        },
                        "account": {
                          "type": "null",
                          "description": "account",
                          "format": "null"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "type": "string",
                              "description": "Latitude of Milestone",
                              "format": "string"
                            },
                            "longitude": {
                              "type": "string",
                              "description": "Longitude of Milestone",
                              "format": "string"
                            }
                          }
                        }
                      }
                    },
                    "activityCount": {
                      "type": "integer",
                      "description": "No of Activities in Milestone",
                      "format": "int64"
                    },
                    "status": {
                      "type": "string",
                      "description": "Milestone status",
                      "format": "string"
                    },
                    "transactionLoc": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "string",
                          "description": "latitude of transaction",
                          "format": "string"
                        },
                        "longitude": {
                          "type": "string",
                          "description": "longitude of transaction",
                          "format": "string"
                        }
                      }
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "milestone approved",
                      "format": "boolean"
                    }
                  }
                }
              },
              "fundGoal": {
                "type": "integer",
                "description": "Fund Goal",
                "format": "int64"
              },
              "currency": {
                "type": "string",
                "description": "Project Currency",
                "format": "string"
              },
              "fundRaised": {
                "type": "integer",
                "description": "Fund Raised To Project",
                "format": "int64"
              },
              "fundAllocated": {
                "type": "integer",
                "description": "Fund Allocated",
                "format": "int64"
              },
              "lastDonation": {
                "type": "object",
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "document type",
                    "format": "string"
                  },
                  "donationid": {
                    "type": "string",
                    "description": "Donation Id",
                    "format": "string"
                  },
                  "donorId": {
                    "type": "string",
                    "description": "Donor Id",
                    "format": "string"
                  },
                  "donorName": {
                    "type": "string",
                    "description": "donor name",
                    "format": "string"
                  },
                  "txnParent": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnChildren": {
                    "type": "null",
                    "description": "milestone approved",
                    "format": "string"
                  },
                  "txnStatus": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnRefNo": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "owner": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnBalance": {
                    "type": "integer",
                    "description": "txn balance",
                    "format": "int64"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "donationAmount": {
                    "type": "integer",
                    "description": "donation amount",
                    "format": "integer"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "latitude of transaction",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "longitude of transaction",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "projectOwner": {
                "type": "string",
                "description": "Project Owner Organization Name",
                "format": "string"
              },
              "foundation": {
                "type": "string",
                "description": "foundation organization name",
                "format": "string"
              },
              "donations": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Project1544527842064-Milestone1544527924613-Activity1544527991184-kf123Donor-5"
                }
              },
              "donors": {
                "type": "string",
                "description": "Donors",
                "format": "string"
              },
              "status": {
                "type": "string",
                "description": "Project Status",
                "format": "string"
              },
              "fundAllocationType": {
                "type": "string",
                "description": "Fund Allocation Type",
                "format": "string"
              },
              "transactionLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of transaction",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of transaction",
                    "format": "string"
                  }
                }
              },
              "SDG": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Zero hunger"
                },
                "description": "SDG's",
                "format": "string"
              },
              "projectLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of project",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of project",
                    "format": "string"
                  }
                }
              },
              "createdBy": {
                "type": "string",
                "description": "Creator Organization Name",
                "format": "string"
              },
              "subRole": {
                "type": "string",
                "description": "Sub Role of Creator",
                "format": "string"
              },
              "published": {
                "type": "boolean",
                "description": "Project Name",
                "format": "boolean"
              },
              "approved": {
                "type": "boolean",
                "description": "Project Name",
                "format": "boolean"
              },
              "Remarks": {
                "type": "string",
                "description": "Project Remarks",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Project Start Date",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "End Date of Project",
                "format": "string"
              },
              "description": {
                "type": "string",
                "description": "Project Description",
                "format": "string"
              },
              "projectBudget": {
                "type": "string",
                "description": "Budget of Project",
                "format": "string"
              },
              "country": {
                "type": "string",
                "description": "Country of Project",
                "format": "string"
              }
            }
          }
        }
      }
    },
    "projectimageallByProjId": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Database document id",
            "format": "string",
            "example":"5cd8fbf3efad33136f7d2a81"
          },
           "imageName": {
            "type": "string",
            "description": "Name of image",
            "format": "string",
            "example":"default.jpg"
          },
          "imagePath": {
            "type": "string",
            "description": "Path of fimage",
            "format": "string",
            "example":"/uploadImage/projectimages/Project1557724145020/"
          },
          "type": {
            "type": "string",
            "description": "Type of file",
            "format": "string",
            "example":"image/jpeg"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example":"Project1557724145020"
          }
        }
      }
    },
    "deleteProjectImage": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "integer",
          "description": "Database document id",
          "format": "int64",
          "example":1
        },
        "n": {
          "type": "integer",
          "description": "Path of file",
          "format": "int64",
           "example":1
        }
      }
    },
    "milestonecreate": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "You will message pf milestone created",
          "format": "string",
          "example":"Milestone Created"
        },
        "data": {
              "type": "string",
              "description": "You will get milestone Id here.",
              "format": "string",
              "example":"Milestone1554112082838"
        }
      }
    },
    "milestoneupdate": {
      "type": "object",
      "properties": {
        "docType": {
          "type": "string",
          "description": "Type Of Document",
          "format": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Project Id",
          "format": "string"
        },
        "projectName": {
          "type": "string",
          "description": "Project Name",
          "format": "string"
        },
        "projectType": {
          "type": "string",
          "description": "Type of Project",
          "format": "string"
        },
        "flag": {
          "type": "string",
          "description": "Flag for Fund Allocated",
          "format": "string"
        },
        "milestones": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "docType": {
                "type": "string",
                "description": "Document Type",
                "format": "string"
              },
              "milestoneName": {
                "type": "string",
                "description": "Milestone Name",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Start Date of Milestone",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "End Date of milestone",
                "format": "string"
              },
              "milestoneId": {
                "type": "string",
                "description": "Milestone Id",
                "format": "string"
              },
              "fundBudgeted": {
                "type": "integer",
                "description": "Fund Budgeted Amount",
                "format": "int64"
              },
              "fundAllocated": {
                "type": "integer",
                "description": "Fund Allocated Amount",
                "format": "int64"
              },
              "fundRequested": {
                "type": "integer",
                "description": "Fund Requested Amount",
                "format": "int64"
              },
              "fundReleased": {
                "type": "integer",
                "description": "Fund Released Amount",
                "format": "int64"
              },
              "activities": {
                "type": "array",
                "items": {
                  "docType": {
                    "type": "string",
                    "description": "document Type",
                    "format": "string"
                  },
                  "activityName": {
                    "type": "string",
                    "description": "activity name",
                    "format": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "start date of activity",
                    "format": "string"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "end date of activity",
                    "format": "string"
                  },
                  "activityBudget": {
                    "type": "integer",
                    "description": "activity Budget",
                    "format": "int64"
                  },
                  "activityFundAllocated": {
                    "type": "integer",
                    "description": "fund allocated to activity",
                    "format": "int64"
                  },
                  "activityFundReleased": {
                    "type": "integer",
                    "description": "fund released to activity",
                    "format": "strint64ing"
                  },
                  "activityFundRequested": {
                    "type": "integer",
                    "description": "fund requested to activity",
                    "format": "int64"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "activity id",
                    "format": "string"
                  },
                  "activityImage": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "proofImage": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "validation": {
                    "type": "boolean",
                    "description": "validation status",
                    "format": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "description": "activity status",
                    "format": "string"
                  },
                  "validatorId": {
                    "type": "string",
                    "description": "validator id",
                    "format": "string"
                  },
                  "secondaryValidation": {
                    "type": "boolean",
                    "description": "secondary validator",
                    "format": "boolean"
                  },
                  "partialValidation": {
                    "type": "boolean",
                    "description": "partial validation",
                    "format": "boolean"
                  },
                  "transactionLoc": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "latitude of transaction",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "longitude of transaction",
                        "format": "string"
                      }
                    }
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "approval status",
                    "format": "boolean"
                  },
                  "remarks": {
                    "type": "string",
                    "description": "remarks",
                    "format": "string"
                  }
                },
                "description": "Activities"
              },
              "milestoneOwner": {
                "type": "string",
                "description": "Milestone",
                "format": "string"
              },
              "milestoneManager": {
                "type": "object",
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "Document Type of Milestone",
                    "format": "string"
                  },
                  "ngoId": {
                    "type": "string",
                    "description": "ngo Id",
                    "format": "string"
                  },
                  "ngoUsername": {
                    "type": "string",
                    "description": "ngo username",
                    "format": "string"
                  },
                  "ngoCompany": {
                    "type": "string",
                    "description": "ngo company",
                    "format": "string"
                  },
                  "fundBalance": {
                    "type": "integer",
                    "description": "fund balance",
                    "format": "int64"
                  },
                  "fundReceived": {
                    "type": "integer",
                    "description": "fund received",
                    "format": "int64"
                  },
                  "account": {
                    "type": "null",
                    "description": "account",
                    "format": "null"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "Latitude of Milestone",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Longitude of Milestone",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "activityCount": {
                "type": "integer",
                "description": "No of Activities in Milestone",
                "format": "int64"
              },
              "status": {
                "type": "string",
                "description": "Milestone status",
                "format": "string"
              },
              "transactionLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of transaction",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of transaction",
                    "format": "string"
                  }
                }
              },
              "approved": {
                "type": "boolean",
                "description": "milestone approved",
                "format": "boolean"
              }
            }
          }
        },
        "fundGoal": {
          "type": "integer",
          "description": "Fund Goal",
          "format": "int64"
        },
        "currency": {
          "type": "string",
          "description": "Project Currency",
          "format": "string"
        },
        "fundRaised": {
          "type": "integer",
          "description": "Fund Raised To Project",
          "format": "int64"
        },
        "fundAllocated": {
          "type": "integer",
          "description": "Fund Allocated",
          "format": "int64"
        },
        "lastDonation": {
          "type": "object",
          "properties": {
            "docType": {
              "type": "string",
              "description": "document type",
              "format": "string"
            },
            "donationid": {
              "type": "string",
              "description": "Donation Id",
              "format": "string"
            },
            "donorId": {
              "type": "string",
              "description": "Donor Id",
              "format": "string"
            },
            "donorName": {
              "type": "string",
              "description": "donor name",
              "format": "string"
            },
            "txnParent": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnChildren": {
              "type": "null",
              "description": "milestone approved",
              "format": "null"
            },
            "txnStatus": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnRefNo": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "projectId": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "owner": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnBalance": {
              "type": "integer",
              "description": "txn balance",
              "format": "int64"
            },
            "projectName": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "donationAmount": {
              "type": "integer",
              "description": "donation amount",
              "format": "integer"
            },
            "location": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "string",
                  "description": "latitude of transaction",
                  "format": "string"
                },
                "longitude": {
                  "type": "string",
                  "description": "longitude of transaction",
                  "format": "string"
                }
              }
            }
          }
        },
        "projectOwner": {
          "type": "string",
          "description": "Project Owner Organization Name",
          "format": "string"
        },
        "foundation": {
          "type": "string",
          "description": "foundation organization name",
          "format": "string"
        },
        "donations": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Project1544527842064-Milestone1544527924613-Activity1544527991184-kf123Donor-5"
          }
        },
        "donors": {
          "type": "string",
          "description": "Donors",
          "format": "string"
        },
        "status": {
          "type": "string",
          "description": "Project Status",
          "format": "string"
        },
        "fundAllocationType": {
          "type": "string",
          "description": "Fund Allocation Type",
          "format": "string"
        },
        "transactionLoc": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "string",
              "description": "latitude of transaction",
              "format": "string"
            },
            "longitude": {
              "type": "string",
              "description": "longitude of transaction",
              "format": "string"
            }
          }
        },
        "SDG": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Zero hunger"
          },
          "description": "SDG's",
          "format": "string"
        },
        "projectLoc": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "string",
              "description": "latitude of project",
              "format": "string"
            },
            "longitude": {
              "type": "string",
              "description": "longitude of project",
              "format": "string"
            }
          }
        },
        "createdBy": {
          "type": "string",
          "description": "Creator Organization Name",
          "format": "string"
        },
        "subRole": {
          "type": "string",
          "description": "Sub Role of Creator",
          "format": "string"
        },
        "published": {
          "type": "boolean",
          "description": "Project Name",
          "format": "boolean"
        },
        "approved": {
          "type": "boolean",
          "description": "Project Name",
          "format": "boolean"
        },
        "Remarks": {
          "type": "string",
          "description": "Project Remarks",
          "format": "string"
        },
        "startDate": {
          "type": "string",
          "description": "Project Start Date",
          "format": "string"
        },
        "endDate": {
          "type": "string",
          "description": "End Date of Project",
          "format": "string"
        },
        "description": {
          "type": "string",
          "description": "Project Description",
          "format": "string"
        },
        "projectBudget": {
          "type": "string",
          "description": "Budget of Project",
          "format": "string"
        },
        "country": {
          "type": "string",
          "description": "Country of Project",
          "format": "string"
        }
      }
    },
    "milestoneallById": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5c4ed7976bc1b53c3bbb7dde"
          },
          "milestone": {
            "type": "string",
            "description": "Milestone Name",
            "format": "string",
            "example": "milestone one"
          },
          "startDate": {
            "type": "string",
            "description": "Milestone Start Date",
            "format": "string",
            "example": "2019-01-27T18:30:00.000Z"
          },
          "endDate": {
            "type": "string",
            "description": "End Date of Milestone",
            "format": "string",
            "example": "2019-01-30T18:30:00.000Z"
          },
          "fundBudgeted": {
            "type": "string",
            "description": "Fund Budgeted",
            "format": "int64",
            "example": 0
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example": "Project1548059724389"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string",
            "example": "Milestone1548670871622"
          }
        }
      }
    },
    "milestonegetAllAudit": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5c45844ed787114dcf4c211f"
          },
          "updatedDate": {
            "type": "string",
            "description": "Transaction Date",
            "format": "string",
            "example": "Mon Jan 21 2019 14:05:26 GMT+0530 (IST)"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string",
            "example": "Project1548059724389"
          },
          "role": {
            "type": "string",
            "description": "role of user who have done transaction",
            "format": "string",
            "example": "foundation"
          },
          "username": {
            "type": "string",
            "description": "Name of user who have done transaction",
            "format": "string",
            "example": "kf123"
          },
          "currentStatus": {
            "type": "string",
            "description": "Project Current Status",
            "format": "string",
            "example": "Project Created"
          }
        }
      }
    },
    "milestoneall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "milestone": {
            "type": "string",
            "description": "Milestone Name",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Milestone Start Date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End Date of Milestone",
            "format": "string"
          },
          "fundBudgeted": {
            "type": "string",
            "description": "Fund Budgeted",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status of milestone",
            "format": "string"
          }
        }
      }
    },
    "milestoneBKCGetAll": {
      "items": {
        "properties": {
          "TxId": {
            "type": "string",
            "description": "Transaction Id",
            "format": "string"
          },
          "Value": {
            "properties": {
              "docType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectId": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectName": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "flag": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "milestones": {
                "items": {}
              },
              "fundGoal": {
                "type": "integer",
                "description": "Transaction Id",
                "format": "integer"
              },
              "currency": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "fundRaised": {
                "type": "integer",
                "description": "Transaction Id",
                "format": "integer"
              },
              "fundAllocated": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "lastDonation": {
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donationid": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donorId": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donorName": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnParent": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnChildren": {
                    "type": "null",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnStatus": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnRefNo": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnBalance": {
                    "type": "integer",
                    "description": "Transaction Id",
                    "format": "integer"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donationAmount": {
                    "type": "integer",
                    "description": "Transaction Id",
                    "format": "integer"
                  },
                  "location": {
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "Transaction Id",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Transaction Id",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "projectOwner": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "foundation": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "donations": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "donors": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "status": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "fundAllocationType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "transactionLoc": {
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  }
                }
              },
              "SDG": {
                "items": {
                  "properties": {
                    "type": "array",
                    "SDGType": {
                      "type": "string",
                      "description": "SDG Type",
                      "format": "string"
                    }
                  }
                }
              },
              "projectLoc": {
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  }
                }
              },
              "createdBy": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "subRole": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "published": {
                "type": "boolean",
                "description": "Transaction Id",
                "format": "boolean"
              },
              "approved": {
                "type": "boolean",
                "description": "Transaction Id",
                "format": "boolean"
              },
              "remarks": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "description": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectBudget": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "country": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              }
            }
          },
          "Timestamp": {
            "type": "string",
            "description": "Milestone Start Date",
            "format": "string"
          },
          "IsDelete": {
            "type": "string",
            "description": "End Date of Milestone",
            "format": "string"
          }
        }
      }
    },
    "milestoneallByMilestoneId": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "milestone": {
            "type": "string",
            "description": "Milestone Name",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Milestone Start Date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End Date of Milestone",
            "format": "string"
          },
          "fundBudgeted": {
            "type": "string",
            "description": "Fund Budgeted",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          }
        }
      }
    },
    "apimilestoneDelete": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "You will message of milestone deleted",
          "format": "string"
        },
        "data": {
          "required": [],
          "properties": {
            "status": {
              "type": "string",
              "description": "You will get status code.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "Hash",
              "format": "string"
            }
          }
        }
      }
    },
    "countryall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5b40739fd851d127beaa6f86"   
            
          },
          "countryName": {
            "type": "string",
            "description": "Country Name",
            "format": "string",
             "example": "India" 
          },
          "Code": {
            "type": "string",
            "description": "Country Code",
            "format": "string",
             "example": "IN" 
          }
        }
      }
    },
    "countrycountryCodes": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5bb4672ad766eb5e028c0555"
          },
          "code": {
            "type": "string",
            "description": "Country Code",
            "format": "string",
            "example": "+91"
          },
          "country": {
            "type": "string",
            "description": "Country Name",
            "format": "string",
            "example": "India"
          }
        }
      }
    },
    "currencyall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5b4074dbd851d127beaa7087"
          },
          "Entity": {
            "type": "string",
            "description": "Name of Country",
            "format": "string",
            "example": "INDIA"
          },
          "currencyName": {
            "type": "string",
            "description": "Name of Currency",
            "format": "string",
            "example": "Indian Rupee"
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency Code",
            "format": "string",
            "example": "INR"
          },
          "NumericCode": {
            "type": "string",
            "description": "Numeric Code nothing but a date",
            "format": "string",
            "example": "1970-01-01T00:00:00.356Z"
          },
          "MinorUnit": {
            "type": "string",
            "description": "Minor Unit is a date",
            "format": "string",
            "example": "1970-01-01T00:00:00.002Z"
          },
          "WithdrawalDate": {
            "type": "null",
            "description": "Date of withdrawal of currency",
            "format": "string",
            "example": "null"
          }
        }
      }
    },
    "donationTypeall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "59b0f108d0108cea43c91ed7"
          },
          "donationType": {
            "type": "string",
            "description": "Type of Donation eg.One Time,Monthly",
            "format": "string",
            "example": "One Time"
          }
        }
      }
    },
    "modeofpaymentall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5b56ae600300b01db83441c6"
          },
          "paymentType": {
            "type": "string",
            "description": "Type of Payment eg. Credit Card,Cash",
            "format": "string",
            "example": "Self"
          }
        }
      }
    },
    "projectsgetAllSDG": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5be3e858880b924b283ec9c3"
          },
          "id": {
            "type": "string",
            "description": "Serial No",
            "format": "string",
            "example": "1"
          },
          "SDGType": {
            "type": "string",
            "description": "SDG Type",
            "format": "string",
            "example": "No poverty"
          }
        }
      }
    },
    "projecttypeall": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
             "example": "5af024c819b1f43a378f46c4"
          },
          "projectType": {
            "type": "string",
            "description": "Project Type",
            "format": "string",
             "example": "Educational"
          }
        }
      }
    },
    "donatesgetAllNotification": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string",
            "example": "5af0247e19b1f43a378f46c2"
          },
          "notificationPreference": {
            "type": "string",
            "description": "Notification Preference eg. Final Report Only",
            "format": "string",
            "example": "Final Report Only"
          }
        }
      }
    },
    "usersgetFoundationUsers": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "first name of user",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "first surname of user",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "second surname of user",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "email id of user",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "username",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "role of user",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "url of user",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "id number of user",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "phone no of user",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "country",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "location of user",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "random number",
            "format": "integer"
          },
          "foundationName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "creator username",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "latitude of user location",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "longitude of user location",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "website url",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "profile status of user",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Password in hash format",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "Used to check user is activated or deactivated",
            "format": "integer"
          },
          "emailBody": {
            "type": "null",
            "description": "Nothing here",
            "format": "string"
          }
        }
      }
    },
    "usersgetNgoUsers": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "first name of user",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "first surname of user",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "second surname of user",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "email id of user",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "username",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "role of user",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "url of user",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "id number of user",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "phone no of user",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "country",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "location of user",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "random number",
            "format": "integer"
          },
          "foundationName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "creator username",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "latitude of user location",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "longitude of user location",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "website url",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "profile status of user",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Password in hash format",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "Used to check user is activated or deactivated",
            "format": "integer"
          },
          "emailBody": {
            "type": "null",
            "description": "Nothing here",
            "format": "string"
          }
        }
      }
    },
    "usersapproveUser": {
      "properties": {
        "message": {
          "type": "string",
          "description": "message of user status changes",
          "format": "string"
        }
      }
    },
    "userslogout": {
      "properties": {
        "message": {
          "type": "string",
          "description": "message of user logout successful",
          "format": "string"
        }
      }
    },
    "projectsapproveProject": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of Project Approval",
          "format": "string"
        }
      }
    },
    "projectsBKCpublishProject": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Message of Project Published",
          "format": "string"
        }
      }
    },
    "usersupdateProfile": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of Profile Updated Successfully",
          "format": "string"
        }
      }
    },
    "userschangePassword": {
      "required": [],
      "properties": {
        "ip": {
          "type": "string",
          "description": "ip address of user.",
          "format": "string"
        },
        "latitude": {
          "type": "string",
          "description": "latitude of location.",
          "format": "string"
        },
        "longitude": {
          "type": "string",
          "description": "longitude of location.",
          "format": "string"
        },
        "username": {
          "type": "string",
          "description": "You will get username.",
          "format": "string"
        },
        "password": {
          "type": "string",
          "description": "You will get blank password.",
          "format": "string"
        },
        "bcData": {
          "properties": {
            "success": {
              "type": "boolean",
              "description": "You will get success value.",
              "format": "boolean"
            },
            "secret": {
              "type": "string",
              "description": "You will get secret.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "You will get enrollment message.",
              "format": "string"
            },
            "token": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            }
          }
        },
        "userToken": {
          "type": "string",
          "description": "You will get bkc token.",
          "format": "string"
        },
        "user": {
          "required": [],
          "properties": {
            "_id": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "secondSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "email": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "username": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "role": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "url": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "idNumber": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "countryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "phone": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "country": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "location": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createFlag": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "int64"
            },
            "foundationName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createdBy": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "foundationCompany": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "subRole": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "mobileNoWithoutCountryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "lat": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "long": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regURL": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "profile": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "hash": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regUser": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "int64"
            },
            "orgLegalName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgTaxId": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "paypal": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            }
          }
        },
        "logoPath": {
          "type": "string",
          "description": "You will get logo path.",
          "format": "string"
        }
      }
    },
    "userscheckPassword": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "first name of user",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "first surname of user",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "second surname of user",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "email id of user",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "username",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "role of user",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "url of user",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "id number of user",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "phone no of user",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "country",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "location of user",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "random number",
            "format": "integer"
          },
          "foundationName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "creator username",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string"
          },
          "mobileNoWithoutCountryCode": {
            "type": "string",
            "description": "Mobile No without country code",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "latitude of user location",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "longitude of user location",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "website url",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "profile status of user",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Password in hash format",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "Used to check user is activated or deactivated",
            "format": "integer"
          },
          "orgLegalName": {
            "type": "integer",
            "description": "Organization Name of user",
            "format": "integer"
          },
          "orgTaxId": {
            "type": "integer",
            "description": "Organization Tax Id",
            "format": "integer"
          },
          "paypal": {
            "type": "integer",
            "description": "Paypal token",
            "format": "integer"
          },
          "emailBody": {
            "type": "null",
            "description": "null data",
            "format": "integer"
          },
          "confirmPassword": {
            "type": "string",
            "description": "blank data",
            "format": "string"
          }
        }
      }
    },
    "sessionname": {
      "properties": {
        "cookie": {
          "items": {
            "properties": {
              "originalMaxAge": {
                "type": "integer",
                "description": "Max Age of session",
                "format": "integer"
              },
              "expires": {
                "type": "string",
                "description": "Date and Time when session expires",
                "format": "string"
              },
              "secure": {
                "type": "boolean",
                "description": "Boolean value",
                "format": "boolean"
              },
              "httpOnly": {
                "type": "boolean",
                "description": "Boolean value",
                "format": "boolean"
              },
              "path": {
                "type": "string",
                "description": "Path",
                "format": "string"
              }
            }
          }
        },
        "token": {
          "type": "string",
          "description": "user Token for calling node api",
          "format": "string"
        },
        "blockChainToken": {
          "type": "string",
          "description": "Blockchain Token",
          "format": "string"
        },
        "username": {
          "type": "string",
          "description": "Username",
          "format": "string"
        },
        "userId": {
          "type": "string",
          "description": "Document Id of user in mongodb",
          "format": "string"
        },
        "role": {
          "type": "string",
          "description": "Role of Logged in user",
          "format": "string"
        },
        "profile": {
          "type": "string",
          "description": "Organization Profile status of Logged in user",
          "format": "string"
        },
        "firstName": {
          "type": "string",
          "description": "Firstname of Logged in User",
          "format": "string"
        },
        "orgName": {
          "type": "string",
          "description": "Organization name of Logged in User",
          "format": "string"
        }
      }
    },
    "usersinsertTokenDetails": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of Paypal Token Insertion Successful",
          "format": "string"
        }
      }
    },
    "usersupdateTokenDetails": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of Paypal Token Updated Successfully",
          "format": "string"
        }
      }
    },
    "usersvalidateUser": {
      "properties": {
        "accepted": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Email Id of user",
            "format": "string"
          }
        },
        "rejected": {
          "type": "array",
          "items": {}
        },
        "envelopeTime": {
          "type": "integer",
          "description": "Time to create envelope",
          "format": "integer"
        },
        "messageTime": {
          "type": "integer",
          "description": "Time took to send the message",
          "format": "integer"
        },
        "messageSize": {
          "type": "integer",
          "description": "Size of the message",
          "format": "integer"
        },
        "response": {
          "type": "string",
          "description": "SMTP response",
          "format": "string"
        },
        "envelope": {
          "properties": {
            "from": {
              "type": "string",
              "description": "Sender Email Id",
              "format": "string"
            },
            "to": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Receiver Email Id",
                "format": "string"
              }
            }
          }
        },
        "messageId": {
          "type": "string",
          "description": "Message Id",
          "format": "string"
        }
      }
    },
    "usersforgotPassword": {
      "properties": {
        "n": {
          "type": "string",
          "description": "number of modifications",
          "format": "string"
        },
        "nModified": {
          "type": "string",
          "description": "number of modifications",
          "format": "string"
        },
        "ok": {
          "type": "string",
          "description": "ok Status",
          "format": "string"
        }
      }
    },
    "usersgetProjectOwnerUser": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "first name of user",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "first surname of user",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "second surname of user",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "email id of user",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "username",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "role of user",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "url of user",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "id number of user",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "phone no of user",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "country",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "location of user",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "random number",
            "format": "integer"
          },
          "foundationName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "creator username",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "latitude of user location",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "longitude of user location",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "website url",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "profile status of user",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Password in hash format",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "Used to check user is activated or deactivated",
            "format": "integer"
          },
          "emailBody": {
            "type": "null",
            "description": "Nothing here",
            "format": "string"
          }
        }
      }
    },
    "usersupdateSession": {
      "required": [],
      "properties": {
        "username": {
          "type": "string",
          "description": "You will get username.",
          "format": "string"
        },
        "password": {
          "type": "string",
          "description": "You will get blank password.",
          "format": "string"
        },
        "bcData": {
          "properties": {
            "success": {
              "type": "boolean",
              "description": "You will get success value.",
              "format": "boolean"
            },
            "secret": {
              "type": "string",
              "description": "You will get secret.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "You will get enrollment message.",
              "format": "string"
            },
            "token": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            }
          }
        },
        "userToken": {
          "type": "string",
          "description": "You will get bkc token.",
          "format": "string"
        },
        "user": {
          "required": [],
          "properties": {
            "_id": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "firstSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "secondSurname": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "email": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "username": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "role": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "url": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "idNumber": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "countryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "phone": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "country": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "location": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createFlag": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "integer"
            },
            "foundationName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "createdBy": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "foundationCompany": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "subRole": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "mobileNoWithoutCountryCode": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "lat": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "long": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regURL": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "profile": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "hash": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "regUser": {
              "type": "integer",
              "description": "You will get bkc token.",
              "format": "int64"
            },
            "orgLegalName": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "orgTaxId": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "paypal": {
              "type": "string",
              "description": "You will get bkc token.",
              "format": "string"
            },
            "emailBody": {
              "type": "null",
              "description": "null data.",
              "format": "string"
            }
          },
          "logoPath": {
            "type": "string",
            "description": "You will get logo path.",
            "format": "string"
          }
        },
        "logoPath": {
          "type": "string",
          "description": "Path of Organization Logo.",
          "format": "string"
        }
      }
    },
    "ngogetUserDetails": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "firstName": {
            "type": "string",
            "description": "first name of user",
            "format": "string"
          },
          "firstSurname": {
            "type": "string",
            "description": "first surname of user",
            "format": "string"
          },
          "secondSurname": {
            "type": "string",
            "description": "second surname of user",
            "format": "string"
          },
          "email": {
            "type": "string",
            "description": "email id of user",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "username",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "role of user",
            "format": "string"
          },
          "url": {
            "type": "string",
            "description": "url of user",
            "format": "string"
          },
          "orgName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "idNumber": {
            "type": "string",
            "description": "id number of user",
            "format": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "format": "string"
          },
          "phone": {
            "type": "string",
            "description": "phone no of user",
            "format": "string"
          },
          "country": {
            "type": "string",
            "description": "country",
            "format": "string"
          },
          "location": {
            "type": "string",
            "description": "location of user",
            "format": "string"
          },
          "createFlag": {
            "type": "integer",
            "description": "random number",
            "format": "integer"
          },
          "foundationName": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "creator username",
            "format": "string"
          },
          "foundationCompany": {
            "type": "string",
            "description": "organization Name of user",
            "format": "string"
          },
          "subRole": {
            "type": "string",
            "description": "Sub Role of user",
            "format": "string"
          },
          "mobileNoWithoutCountryCode": {
            "type": "string",
            "description": "Mobile No without country code",
            "format": "string"
          },
          "lat": {
            "type": "string",
            "description": "latitude of user location",
            "format": "string"
          },
          "long": {
            "type": "string",
            "description": "longitude of user location",
            "format": "string"
          },
          "regURL": {
            "type": "string",
            "description": "website url",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "description": "profile status of user",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Password in hash format",
            "format": "string"
          },
          "regUser": {
            "type": "integer",
            "description": "Used to check user is activated or deactivated",
            "format": "integer"
          },
          "orgLegalName": {
            "type": "integer",
            "description": "Organization Name of user",
            "format": "integer"
          },
          "orgTaxId": {
            "type": "integer",
            "description": "Organization Tax Id",
            "format": "integer"
          },
          "paypal": {
            "type": "integer",
            "description": "Paypal token",
            "format": "integer"
          },
          "emailBody": {
            "type": "null",
            "description": "null data",
            "format": "integer"
          }
        }
      }
    },
    "usersupdateUserDetails": {
      "properties": {
        "n": {
          "type": "string",
          "description": "number of modifications",
          "format": "string"
        },
        "nModified": {
          "type": "string",
          "description": "number of modifications",
          "format": "string"
        },
        "ok": {
          "type": "string",
          "description": "ok Status",
          "format": "string"
        }
      }
    },
    "register": {
      "properties": {
        "msg": {
          "type": "string",
          "description": "Registration Successful Message",
          "format": "string"
        }
      }
    },
    "donatescreate": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Donation Successful Message",
          "format": "string"
        }
      }
    },
    "foundationDonate": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Donation Successful Message",
          "format": "string"
        }
      }
    },
    "usersgetPaymentDetail": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id",
            "format": "string"
          },
          "accountType": {
            "type": "string",
            "description": "Type of account eg.sandbox,live",
            "format": "string"
          },
          "sandBoxtoken": {
            "type": "string",
            "description": "Sandbox Token",
            "format": "string"
          },
          "liveToken": {
            "type": "string",
            "description": "Live Token",
            "format": "string"
          },
          "foundationName": {
            "type": "string",
            "description": "Foundation Company",
            "format": "string"
          }
        }
      }
    },
    "projectdonationallFunds": {
      "type": "array",
      "items": {
        "properties": {
          "Key": {
            "type": "string",
            "description": "Project",
            "format": "string"
          },
          "Record": {
            "properties": {
              "docType": {
                "type": "string",
                "description": "Type Of Document",
                "format": "string"
              },
              "projectId": {
                "type": "string",
                "description": "Project Id",
                "format": "string"
              },
              "projectName": {
                "type": "string",
                "description": "Project Name",
                "format": "string"
              },
              "projectType": {
                "type": "string",
                "description": "Type of Project",
                "format": "string"
              },
              "flag": {
                "type": "string",
                "description": "Flag for Fund Allocated",
                "format": "string"
              },
              "milestones": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "docType": {
                      "type": "string",
                      "description": "Document Type",
                      "format": "string"
                    },
                    "milestoneName": {
                      "type": "string",
                      "description": "Milestone Name",
                      "format": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Start Date of Milestone",
                      "format": "string"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "End Date of milestone",
                      "format": "string"
                    },
                    "milestoneId": {
                      "type": "string",
                      "description": "Milestone Id",
                      "format": "string"
                    },
                    "fundBudgeted": {
                      "type": "integer",
                      "description": "Fund Budgeted Amount",
                      "format": "int64"
                    },
                    "fundAllocated": {
                      "type": "integer",
                      "description": "Fund Allocated Amount",
                      "format": "int64"
                    },
                    "fundRequested": {
                      "type": "integer",
                      "description": "Fund Requested Amount",
                      "format": "int64"
                    },
                    "fundReleased": {
                      "type": "integer",
                      "description": "Fund Released Amount",
                      "format": "int64"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "docType": {
                          "type": "string",
                          "description": "document Type",
                          "format": "string"
                        },
                        "activityName": {
                          "type": "string",
                          "description": "activity name",
                          "format": "string"
                        },
                        "startDate": {
                          "type": "string",
                          "description": "start date of activity",
                          "format": "string"
                        },
                        "endDate": {
                          "type": "string",
                          "description": "end date of activity",
                          "format": "string"
                        },
                        "activityBudget": {
                          "type": "integer",
                          "description": "activity Budget",
                          "format": "int64"
                        },
                        "activityFundAllocated": {
                          "type": "integer",
                          "description": "fund allocated to activity",
                          "format": "int64"
                        },
                        "activityFundReleased": {
                          "type": "integer",
                          "description": "fund released to activity",
                          "format": "strint64ing"
                        },
                        "activityFundRequested": {
                          "type": "integer",
                          "description": "fund requested to activity",
                          "format": "int64"
                        },
                        "activityId": {
                          "type": "string",
                          "description": "activity id",
                          "format": "string"
                        },
                        "activityImage": {
                          "type": "string",
                          "description": "",
                          "format": "string"
                        },
                        "proofImage": {
                          "type": "string",
                          "description": "",
                          "format": "string"
                        },
                        "validation": {
                          "type": "boolean",
                          "description": "validation status",
                          "format": "boolean"
                        },
                        "status": {
                          "type": "string",
                          "description": "activity status",
                          "format": "string"
                        },
                        "validatorId": {
                          "type": "string",
                          "description": "validator id",
                          "format": "string"
                        },
                        "secondaryValidation": {
                          "type": "boolean",
                          "description": "secondary validator",
                          "format": "boolean"
                        },
                        "partialValidation": {
                          "type": "boolean",
                          "description": "partial validation",
                          "format": "boolean"
                        },
                        "transactionLoc": {
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "type": "string",
                              "description": "latitude of transaction",
                              "format": "string"
                            },
                            "longitude": {
                              "type": "string",
                              "description": "longitude of transaction",
                              "format": "string"
                            }
                          }
                        },
                        "approved": {
                          "type": "boolean",
                          "description": "approval status",
                          "format": "boolean"
                        },
                        "remarks": {
                          "type": "string",
                          "description": "remarks",
                          "format": "string"
                        }
                      },
                      "description": "Activities"
                    },
                    "milestoneOwner": {
                      "type": "string",
                      "description": "Milestone",
                      "format": "string"
                    },
                    "milestoneManager": {
                      "type": "object",
                      "properties": {
                        "docType": {
                          "type": "string",
                          "description": "Document Type of Milestone",
                          "format": "string"
                        },
                        "ngoId": {
                          "type": "string",
                          "description": "ngo Id",
                          "format": "string"
                        },
                        "ngoUsername": {
                          "type": "string",
                          "description": "ngo username",
                          "format": "string"
                        },
                        "ngoCompany": {
                          "type": "string",
                          "description": "ngo company",
                          "format": "string"
                        },
                        "fundBalance": {
                          "type": "integer",
                          "description": "fund balance",
                          "format": "int64"
                        },
                        "fundReceived": {
                          "type": "integer",
                          "description": "fund received",
                          "format": "int64"
                        },
                        "account": {
                          "type": "null",
                          "description": "account",
                          "format": "null"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "type": "string",
                              "description": "Latitude of Milestone",
                              "format": "string"
                            },
                            "longitude": {
                              "type": "string",
                              "description": "Longitude of Milestone",
                              "format": "string"
                            }
                          }
                        }
                      }
                    },
                    "activityCount": {
                      "type": "integer",
                      "description": "No of Activities in Milestone",
                      "format": "int64"
                    },
                    "status": {
                      "type": "string",
                      "description": "Milestone status",
                      "format": "string"
                    },
                    "transactionLoc": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "string",
                          "description": "latitude of transaction",
                          "format": "string"
                        },
                        "longitude": {
                          "type": "string",
                          "description": "longitude of transaction",
                          "format": "string"
                        }
                      }
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "milestone approved",
                      "format": "boolean"
                    }
                  }
                }
              },
              "fundGoal": {
                "type": "integer",
                "description": "Fund Goal",
                "format": "int64"
              },
              "currency": {
                "type": "string",
                "description": "Project Currency",
                "format": "string"
              },
              "fundRaised": {
                "type": "integer",
                "description": "Fund Raised To Project",
                "format": "int64"
              },
              "fundAllocated": {
                "type": "integer",
                "description": "Fund Allocated",
                "format": "int64"
              },
              "lastDonation": {
                "type": "object",
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "document type",
                    "format": "string"
                  },
                  "donationid": {
                    "type": "string",
                    "description": "Donation Id",
                    "format": "string"
                  },
                  "donorId": {
                    "type": "string",
                    "description": "Donor Id",
                    "format": "string"
                  },
                  "donorName": {
                    "type": "string",
                    "description": "donor name",
                    "format": "string"
                  },
                  "txnParent": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnChildren": {
                    "type": "null",
                    "description": "milestone approved",
                    "format": "string"
                  },
                  "txnStatus": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnRefNo": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "owner": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "txnBalance": {
                    "type": "integer",
                    "description": "txn balance",
                    "format": "int64"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "donationAmount": {
                    "type": "integer",
                    "description": "donation amount",
                    "format": "integer"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "latitude of transaction",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "longitude of transaction",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "projectOwner": {
                "type": "string",
                "description": "Project Owner Organization Name",
                "format": "string"
              },
              "foundation": {
                "type": "string",
                "description": "foundation organization name",
                "format": "string"
              },
              "donations": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Project1544527842064-Milestone1544527924613-Activity1544527991184-kf123Donor-5"
                }
              },
              "donors": {
                "type": "string",
                "description": "Donors",
                "format": "string"
              },
              "status": {
                "type": "string",
                "description": "Project Status",
                "format": "string"
              },
              "fundAllocationType": {
                "type": "string",
                "description": "Fund Allocation Type",
                "format": "string"
              },
              "transactionLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of transaction",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of transaction",
                    "format": "string"
                  }
                }
              },
              "SDG": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Zero hunger"
                },
                "description": "SDG's",
                "format": "string"
              },
              "projectLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of project",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of project",
                    "format": "string"
                  }
                }
              },
              "createdBy": {
                "type": "string",
                "description": "Creator Organization Name",
                "format": "string"
              },
              "subRole": {
                "type": "string",
                "description": "Sub Role of Creator",
                "format": "string"
              },
              "published": {
                "type": "boolean",
                "description": "Project Name",
                "format": "boolean"
              },
              "approved": {
                "type": "boolean",
                "description": "Project Name",
                "format": "boolean"
              },
              "Remarks": {
                "type": "string",
                "description": "Project Remarks",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Project Start Date",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "End Date of Project",
                "format": "string"
              },
              "description": {
                "type": "string",
                "description": "Project Description",
                "format": "string"
              },
              "projectBudget": {
                "type": "string",
                "description": "Budget of Project",
                "format": "string"
              },
              "country": {
                "type": "string",
                "description": "Country of Project",
                "format": "string"
              }
            }
          }
        }
      }
    },
    "projectdonationBKCMyFunds": {
      "items": {
        "properties": {
          "TxId": {
            "type": "string",
            "description": "Transaction Id",
            "format": "string"
          },
          "Value": {
            "properties": {
              "docType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectId": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectName": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "flag": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "milestones": {
                "items": {}
              },
              "fundGoal": {
                "type": "integer",
                "description": "Transaction Id",
                "format": "integer"
              },
              "currency": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "fundRaised": {
                "type": "integer",
                "description": "Transaction Id",
                "format": "integer"
              },
              "fundAllocated": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "lastDonation": {
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donationid": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donorId": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donorName": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnParent": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnChildren": {
                    "type": "null",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnStatus": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnRefNo": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "txnBalance": {
                    "type": "integer",
                    "description": "Transaction Id",
                    "format": "integer"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "donationAmount": {
                    "type": "integer",
                    "description": "Transaction Id",
                    "format": "integer"
                  },
                  "location": {
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "Transaction Id",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Transaction Id",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "projectOwner": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "foundation": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "donations": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "donors": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "status": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "fundAllocationType": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "transactionLoc": {
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  }
                }
              },
              "SDG": {
                "items": {
                  "properties": {
                    "type": "array",
                    "SDGType": {
                      "type": "string",
                      "description": "SDG Type",
                      "format": "string"
                    }
                  }
                }
              },
              "projectLoc": {
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "Transaction Id",
                    "format": "string"
                  }
                }
              },
              "createdBy": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "subRole": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "published": {
                "type": "boolean",
                "description": "Transaction Id",
                "format": "boolean"
              },
              "approved": {
                "type": "boolean",
                "description": "Transaction Id",
                "format": "boolean"
              },
              "remarks": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "description": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "projectBudget": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              },
              "country": {
                "type": "string",
                "description": "Transaction Id",
                "format": "string"
              }
            }
          },
          "Timestamp": {
            "type": "string",
            "description": "Milestone Start Date",
            "format": "string"
          },
          "IsDelete": {
            "type": "string",
            "description": "End Date of Milestone",
            "format": "string"
          }
        }
      }
    },
    "alldonorgetMyDonations": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id",
            "format": "string"
          },
          "updatedDate": {
            "type": "string",
            "description": "Donation Date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "projectName": {
            "type": "string",
            "description": "Name of Project",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "User name of donor",
            "format": "string"
          },
          "amount": {
            "type": "integer",
            "description": "Donation amount",
            "format": "integer"
          },
          "notificationPreference": {
            "type": "string",
            "description": "Notification Preference eg. Final Report Only",
            "format": "string"
          },
          "anonymousUser": {
            "type": "string",
            "description": "",
            "format": "string"
          },
          "aliasName": {
            "type": "string",
            "description": "Username of donor",
            "format": "string"
          },
          "uploadedDocument": {
            "type": "null",
            "description": "doc details",
            "format": "string"
          },
          "referenceNo": {
            "type": "null",
            "description": "Reference No",
            "format": "string"
          }
        }
      }
    },
    "alldonorgetAllDonorListDB": {
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id",
            "format": "string"
          },
          "updatedDate": {
            "type": "string",
            "description": "Donation Date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "projectName": {
            "type": "string",
            "description": "Name of Project",
            "format": "string"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "format": "string"
          },
          "username": {
            "type": "string",
            "description": "User name of donor",
            "format": "string"
          },
          "amount": {
            "type": "integer",
            "description": "Donation amount",
            "format": "integer"
          },
          "notificationPreference": {
            "type": "string",
            "description": "Notification Preference eg. Final Report Only",
            "format": "string"
          },
          "anonymousUser": {
            "type": "string",
            "description": "",
            "format": "string"
          },
          "aliasName": {
            "type": "string",
            "description": "Username of donor",
            "format": "string"
          },
          "uploadedDocument": {
            "type": "null",
            "description": "doc details",
            "format": "string"
          },
          "referenceNo": {
            "type": "null",
            "description": "Reference No",
            "format": "string"
          }
        }
      }
    },
    "projectcommunicationsaveEmail": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Notification Send Successful Message",
          "format": "string"
        }
      }
    },
    "milestonecreateAct": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "You will get message of activity created",
          "format": "string"
        },
        "data": {
          "required": [],
          "properties": {
            "status": {
              "type": "string",
              "description": "You will get status code.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "Hash",
              "format": "string"
            }
          }
        }
      }
    },
    "activityupdateActivity": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "You will get message of activity updated",
          "format": "string"
        },
        "data": {
          "required": [],
          "properties": {
            "status": {
              "type": "string",
              "description": "You will get status code.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "Hash",
              "format": "string"
            }
          }
        }
      }
    },
    "activityallByName": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id.",
            "format": "string"
          },
          "activityName": {
            "type": "string",
            "description": "Name of Activity",
            "format": "string"
          },
          "validationCheck": {
            "type": "string",
            "description": "requirements of validation",
            "format": "string"
          },
          "completionCriteria": {
            "type": "string",
            "description": "criteria for activity to complete",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          },
          "activityBudget": {
            "type": "string",
            "description": "Activity Budget",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "Activity Id",
            "format": "string"
          },
          "proofRqd": {
            "type": "string",
            "description": "null",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status of activity.",
            "format": "string"
          },
          "secondaryValidation": {
            "type": "boolean",
            "description": false,
            "format": "boolean"
          },
          "validatorId": {
            "type": "string",
            "description": "validator",
            "format": "string"
          }
        }
      }
    },
    "activitydeleteActivity": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "You will get message of activity deleted successfully",
          "format": "string"
        },
        "data": {
          "required": [],
          "properties": {
            "status": {
              "type": "string",
              "description": "You will get status code.",
              "format": "string"
            },
            "message": {
              "type": "string",
              "description": "Hash",
              "format": "string"
            }
          }
        }
      }
    },
    "activityall": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id.",
            "format": "string"
          },
          "activityName": {
            "type": "string",
            "description": "Name of Activity",
            "format": "string"
          },
          "validationCheck": {
            "type": "string",
            "description": "requirements of validation",
            "format": "string"
          },
          "completionCriteria": {
            "type": "string",
            "description": "criteria for activity to complete",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          },
          "activityBudget": {
            "type": "string",
            "description": "Activity Budget",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "Activity Id",
            "format": "string"
          },
          "proofRqd": {
            "type": "string",
            "description": "null",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status of activity.",
            "format": "string"
          },
          "secondaryValidation": {
            "type": "boolean",
            "description": false,
            "format": "boolean"
          },
          "validatorId": {
            "type": "string",
            "description": "validator",
            "format": "string"
          }
        }
      }
    },
    "activityactivityByProjectId": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id.",
            "format": "string"
          },
          "activityName": {
            "type": "string",
            "description": "Name of Activity",
            "format": "string"
          },
          "validationCheck": {
            "type": "string",
            "description": "requirements of validation",
            "format": "string"
          },
          "completionCriteria": {
            "type": "string",
            "description": "criteria for activity to complete",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          },
          "activityBudget": {
            "type": "string",
            "description": "Activity Budget",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "Activity Id",
            "format": "string"
          },
          "proofRqd": {
            "type": "string",
            "description": "null",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status of activity.",
            "format": "string"
          },
          "secondaryValidation": {
            "type": "boolean",
            "description": false,
            "format": "boolean"
          },
          "validatorId": {
            "type": "string",
            "description": "validator",
            "format": "string"
          }
        }
      }
    },
    "activitygetActivityById": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id.",
            "format": "string"
          },
          "activityName": {
            "type": "string",
            "description": "Name of Activity",
            "format": "string"
          },
          "validationCheck": {
            "type": "string",
            "description": "requirements of validation",
            "format": "string"
          },
          "completionCriteria": {
            "type": "string",
            "description": "criteria for activity to complete",
            "format": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "string"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "Milestone Id",
            "format": "string"
          },
          "activityBudget": {
            "type": "string",
            "description": "Activity Budget",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "Activity Id",
            "format": "string"
          },
          "proofRqd": {
            "type": "string",
            "description": "null",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status of activity.",
            "format": "string"
          },
          "secondaryValidation": {
            "type": "boolean",
            "description": false,
            "format": "boolean"
          },
          "validatorId": {
            "type": "string",
            "description": "validator",
            "format": "string"
          }
        }
      }
    },
    "activityapproveActivity": {
      "type": "array",
      "properties": {
        "docType": {
          "type": "string",
          "description": "Type Of Document",
          "format": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Project Id",
          "format": "string"
        },
        "projectName": {
          "type": "string",
          "description": "Project Name",
          "format": "string"
        },
        "projectType": {
          "type": "string",
          "description": "Type of Project",
          "format": "string"
        },
        "flag": {
          "type": "string",
          "description": "Flag for Fund Allocated",
          "format": "string"
        },
        "milestones": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "docType": {
                "type": "string",
                "description": "Document Type",
                "format": "string"
              },
              "milestoneName": {
                "type": "string",
                "description": "Milestone Name",
                "format": "string"
              },
              "startDate": {
                "type": "string",
                "description": "Start Date of Milestone",
                "format": "string"
              },
              "endDate": {
                "type": "string",
                "description": "End Date of milestone",
                "format": "string"
              },
              "milestoneId": {
                "type": "string",
                "description": "Milestone Id",
                "format": "string"
              },
              "fundBudgeted": {
                "type": "integer",
                "description": "Fund Budgeted Amount",
                "format": "int64"
              },
              "fundAllocated": {
                "type": "integer",
                "description": "Fund Allocated Amount",
                "format": "int64"
              },
              "fundRequested": {
                "type": "integer",
                "description": "Fund Requested Amount",
                "format": "int64"
              },
              "fundReleased": {
                "type": "integer",
                "description": "Fund Released Amount",
                "format": "int64"
              },
              "activities": {
                "type": "array",
                "items": {
                  "docType": {
                    "type": "string",
                    "description": "document Type",
                    "format": "string"
                  },
                  "activityName": {
                    "type": "string",
                    "description": "activity name",
                    "format": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "start date of activity",
                    "format": "string"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "end date of activity",
                    "format": "string"
                  },
                  "activityBudget": {
                    "type": "integer",
                    "description": "activity Budget",
                    "format": "int64"
                  },
                  "activityFundAllocated": {
                    "type": "integer",
                    "description": "fund allocated to activity",
                    "format": "int64"
                  },
                  "activityFundReleased": {
                    "type": "integer",
                    "description": "fund released to activity",
                    "format": "strint64ing"
                  },
                  "activityFundRequested": {
                    "type": "integer",
                    "description": "fund requested to activity",
                    "format": "int64"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "activity id",
                    "format": "string"
                  },
                  "activityImage": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "proofImage": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                  },
                  "validation": {
                    "type": "boolean",
                    "description": "validation status",
                    "format": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "description": "activity status",
                    "format": "string"
                  },
                  "validatorId": {
                    "type": "string",
                    "description": "validator id",
                    "format": "string"
                  },
                  "secondaryValidation": {
                    "type": "boolean",
                    "description": "secondary validator",
                    "format": "boolean"
                  },
                  "partialValidation": {
                    "type": "boolean",
                    "description": "partial validation",
                    "format": "boolean"
                  },
                  "transactionLoc": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "latitude of transaction",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "longitude of transaction",
                        "format": "string"
                      }
                    }
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "approval status",
                    "format": "boolean"
                  },
                  "remarks": {
                    "type": "string",
                    "description": "remarks",
                    "format": "string"
                  }
                },
                "description": "Activities"
              },
              "milestoneOwner": {
                "type": "string",
                "description": "Milestone",
                "format": "string"
              },
              "milestoneManager": {
                "type": "object",
                "properties": {
                  "docType": {
                    "type": "string",
                    "description": "Document Type of Milestone",
                    "format": "string"
                  },
                  "ngoId": {
                    "type": "string",
                    "description": "ngo Id",
                    "format": "string"
                  },
                  "ngoUsername": {
                    "type": "string",
                    "description": "ngo username",
                    "format": "string"
                  },
                  "ngoCompany": {
                    "type": "string",
                    "description": "ngo company",
                    "format": "string"
                  },
                  "fundBalance": {
                    "type": "integer",
                    "description": "fund balance",
                    "format": "int64"
                  },
                  "fundReceived": {
                    "type": "integer",
                    "description": "fund received",
                    "format": "int64"
                  },
                  "account": {
                    "type": "null",
                    "description": "account",
                    "format": "null"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string",
                        "description": "Latitude of Milestone",
                        "format": "string"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Longitude of Milestone",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "activityCount": {
                "type": "integer",
                "description": "No of Activities in Milestone",
                "format": "int64"
              },
              "status": {
                "type": "string",
                "description": "Milestone status",
                "format": "string"
              },
              "transactionLoc": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "string",
                    "description": "latitude of transaction",
                    "format": "string"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude of transaction",
                    "format": "string"
                  }
                }
              },
              "approved": {
                "type": "boolean",
                "description": "milestone approved",
                "format": "boolean"
              }
            }
          }
        },
        "fundGoal": {
          "type": "integer",
          "description": "Fund Goal",
          "format": "int64"
        },
        "currency": {
          "type": "string",
          "description": "Project Currency",
          "format": "string"
        },
        "fundRaised": {
          "type": "integer",
          "description": "Fund Raised To Project",
          "format": "int64"
        },
        "fundAllocated": {
          "type": "integer",
          "description": "Fund Allocated",
          "format": "int64"
        },
        "lastDonation": {
          "type": "object",
          "properties": {
            "docType": {
              "type": "string",
              "description": "document type",
              "format": "string"
            },
            "donationid": {
              "type": "string",
              "description": "Donation Id",
              "format": "string"
            },
            "donorId": {
              "type": "string",
              "description": "Donor Id",
              "format": "string"
            },
            "donorName": {
              "type": "string",
              "description": "donor name",
              "format": "string"
            },
            "txnParent": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnChildren": {
              "type": "null",
              "description": "milestone approved",
              "format": "string"
            },
            "txnStatus": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnRefNo": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "projectId": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "owner": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "txnBalance": {
              "type": "integer",
              "description": "txn balance",
              "format": "int64"
            },
            "projectName": {
              "type": "string",
              "description": "",
              "format": "string"
            },
            "donationAmount": {
              "type": "integer",
              "description": "donation amount",
              "format": "integer"
            },
            "location": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "string",
                  "description": "latitude of transaction",
                  "format": "string"
                },
                "longitude": {
                  "type": "string",
                  "description": "longitude of transaction",
                  "format": "string"
                }
              }
            }
          }
        },
        "projectOwner": {
          "type": "string",
          "description": "Project Owner Organization Name",
          "format": "string"
        },
        "foundation": {
          "type": "string",
          "description": "foundation organization name",
          "format": "string"
        },
        "donations": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Project1544527842064-Milestone1544527924613-Activity1544527991184-kf123Donor-5"
          }
        },
        "donors": {
          "type": "string",
          "description": "Donors",
          "format": "string"
        },
        "status": {
          "type": "string",
          "description": "Project Status",
          "format": "string"
        },
        "fundAllocationType": {
          "type": "string",
          "description": "Fund Allocation Type",
          "format": "string"
        },
        "transactionLoc": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "string",
              "description": "latitude of transaction",
              "format": "string"
            },
            "longitude": {
              "type": "string",
              "description": "longitude of transaction",
              "format": "string"
            }
          }
        },
        "SDG": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Zero hunger"
          },
          "description": "SDG's",
          "format": "string"
        },
        "projectLoc": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "string",
              "description": "latitude of project",
              "format": "string"
            },
            "longitude": {
              "type": "string",
              "description": "longitude of project",
              "format": "string"
            }
          }
        },
        "createdBy": {
          "type": "string",
          "description": "Creator Organization Name",
          "format": "string"
        },
        "subRole": {
          "type": "string",
          "description": "Sub Role of Creator",
          "format": "string"
        },
        "published": {
          "type": "boolean",
          "description": "Project Name",
          "format": "boolean"
        },
        "approved": {
          "type": "boolean",
          "description": "Project Name",
          "format": "boolean"
        },
        "Remarks": {
          "type": "string",
          "description": "Project Remarks",
          "format": "string"
        },
        "startDate": {
          "type": "string",
          "description": "Project Start Date",
          "format": "string"
        },
        "endDate": {
          "type": "string",
          "description": "End Date of Project",
          "format": "string"
        },
        "description": {
          "type": "string",
          "description": "Project Description",
          "format": "string"
        },
        "projectBudget": {
          "type": "string",
          "description": "Budget of Project",
          "format": "string"
        },
        "country": {
          "type": "string",
          "description": "Country of Project",
          "format": "string"
        }
      }
    },
    "invoicescreate": {
      "required": [],
      "properties": {
        "result": {
          "properties": {
            "ok": {
              "type": "integer",
              "description": "Insertion status",
              "format": "integer"
            },
            "n": {
              "type": "integer",
              "description": "No of document Inserted",
              "format": "integer"
            }
          }
        },
        "ops": {
          "items": {
            "properties": {
              "activityId": {
                "type": "string",
                "description": "ActivityId Passed from body",
                "format": "string"
              },
              "description": {
                "type": "string",
                "description": "Description Passed from body",
                "format": "string"
              },
              "expenseItem": {
                "type": "string",
                "description": "Expense Item Name passed from body",
                "format": "string"
              },
              "status": {
                "type": "string",
                "description": "status passed from body",
                "format": "string"
              },
              "_id": {
                "type": "string",
                "description": "Document Id",
                "format": "string"
              }
            }
          }
        },
        "insertedCount": {
          "type": "integer",
          "description": "Insertion Count",
          "format": "integer"
        },
        "insertedIds": {
          "items": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          }
        }
      }
    },
    "updateExpense": {
      "required": [],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Document id.",
          "format": "string"
        },
        "activityId": {
          "type": "string",
          "description": "Activity Id",
          "format": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of Expense",
          "format": "string"
        },
        "expenseItem": {
          "type": "string",
          "description": "Name of Expense",
          "format": "string"
        },
        "status": {
          "type": "string",
          "description": "status of Expense.",
          "format": "string"
        },
        "invoiceDate": {
          "type": "null",
          "description": "Expense Date",
          "format": "string"
        },
        "invoiceNo": {
          "type": "null",
          "description": "Expense No",
          "format": "string"
        }
      }
    },
    "deleteExpense": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of Expense Deleted",
          "format": "string"
        }
      }
    },
    "invoicesallById": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "expenseItem": {
            "type": "string",
            "description": "Expense Item Name",
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "ActivityId",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "statu",
            "format": "string"
          }
        }
      }
    },
    "invoicesall": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "expenseItem": {
            "type": "string",
            "description": "Expense Item Name",
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "ActivityId",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status",
            "format": "string"
          }
        }
      }
    },
    "invoicesgetExpenseEdit": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document Id",
            "format": "string"
          },
          "expenseItem": {
            "type": "string",
            "description": "Expense Item Name",
            "format": "string"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "ActivityId",
            "format": "string"
          },
          "status": {
            "type": "string",
            "description": "status",
            "format": "string"
          }
        }
      }
    },
    "milestoneBKCFundRequest": {
      "required": [],
      "properties": {
        "status": {
          "type": "string",
          "description": "status passed from body",
          "format": "string"
        }
      }
    },
    "milestoneBKCFundReleased": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "Fund Released Message",
          "format": "string"
        }
      }
    },
    "proofsall": {
      "required": [],
      "items": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "Document id",
            "format": "string"
          },
          "proofType": {
            "type": "string",
            "description": "Type of Proof",
            "format": "string"
          },
          "amount": {
            "type": "integer",
            "description": "Amount",
            "format": "integer"
          },
          "currencyType": {
            "type": "string",
            "description": "Currency",
            "format": "string"
          },
          "remarks": {
            "type": "string",
            "description": "Remarks of Project Owner",
            "format": "string"
          },
          "smsBody": {
            "type": "string",
            "description": "SMS Body",
            "format": "string"
          },
          "expenseId": {
            "type": "string",
            "description": "Document id of expense to which proof belongs",
            "format": "string"
          },
          "milestoneId": {
            "type": "string",
            "description": "milestone Id",
            "format": "string"
          },
          "projectId": {
            "type": "string",
            "description": "Project Id",
            "format": "string"
          },
          "activityId": {
            "type": "string",
            "description": "Activity Id",
            "format": "string"
          },
          "documentName": {
            "type": "string",
            "description": "Name of Document submitted as proof",
            "format": "string"
          },
          "documentId": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          },
          "hash": {
            "type": "string",
            "description": "Hash of Document",
            "format": "string"
          }
        }
      }
    },
    "documentscreate": {
      "required": [],
      "properties": {
        "result": {
          "properties": {
            "ok": {
              "type": "integer",
              "description": "Insertion status",
              "format": "integer"
            },
            "n": {
              "type": "integer",
              "description": "No of document Inserted",
              "format": "integer"
            }
          }
        },
        "ops": {
          "items": {
            "properties": {
              "documentName": {
                "type": "string",
                "description": "document name passed",
                "format": "string"
              },
              "documentPath": {
                "type": "string",
                "description": "Document Path Passed",
                "format": "string"
              },
              "documentHash": {
                "type": "string",
                "description": "Document hash",
                "format": "string"
              },
              "_id": {
                "type": "string",
                "description": "Document Id",
                "format": "string"
              }
            }
          }
        },
        "insertedCount": {
          "type": "integer",
          "description": "Insertion Count",
          "format": "integer"
        },
        "insertedIds": {
          "items": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          }
        }
      }
    },
    "proofscreate": {
      "required": [],
      "properties": {
        "result": {
          "properties": {
            "ok": {
              "type": "integer",
              "description": "Insertion status",
              "format": "integer"
            },
            "n": {
              "type": "integer",
              "description": "No of document Inserted",
              "format": "integer"
            }
          }
        },
        "ops": {
          "items": {
            "properties": {
              "activityId": {
                "type": "string",
                "description": "Activity Id",
                "format": "string"
              },
              "amount": {
                "type": "integer",
                "description": "Proof Submitted fir Amount",
                "format": "integer"
              },
              "currencyType": {
                "type": "string",
                "description": "Currency Type",
                "format": "string"
              },
              "documentId": {
                "type": "string",
                "description": "Id of Document",
                "format": "string"
              },
              "documentName": {
                "type": "string",
                "description": "document Name",
                "format": "string"
              },
              "expenseId": {
                "type": "string",
                "description": "Expense Id to which proof belongs",
                "format": "string"
              },
              "hash": {
                "type": "string",
                "description": "Document hash",
                "format": "string"
              },
              "milestoneId": {
                "type": "string",
                "description": "Milestone id",
                "format": "string"
              },
              "projectId": {
                "type": "string",
                "description": "Project Id",
                "format": "string"
              },
              "proofType": {
                "type": "string",
                "description": "Type of Proof",
                "format": "string"
              },
              "remarks": {
                "type": "string",
                "description": "Remarks",
                "format": "string"
              },
              "smsBody": {
                "type": "string",
                "description": "SMS Body",
                "format": "string"
              },
              "_id": {
                "type": "string",
                "description": "Document Id",
                "format": "string"
              }
            }
          }
        },
        "insertedCount": {
          "type": "integer",
          "description": "Insertion Count",
          "format": "integer"
        },
        "insertedIds": {
          "items": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          }
        }
      }
    },
    "projectsBKCProjectValidation": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "Validation Successful message",
          "format": "string"
        }
      }
    },
    "milestoneupdateProofStatus": {
      "required": [],
      "properties": {
        "message": {
          "type": "string",
          "description": "Milestone Updation Successful message",
          "format": "string"
        }
      }
    },
    "saveFile": {
      "required": [],
      "properties": {
        "result": {
          "properties": {
            "ok": {
              "type": "integer",
              "description": "Insertion status",
              "format": "integer"
            },
            "n": {
              "type": "integer",
              "description": "No of document Inserted",
              "format": "integer"
            }
          }
        },
        "ops": {
          "items": {
            "properties": {
            }
          }
        },
        "insertedCount": {
          "type": "integer",
          "description": "Insertion Count",
          "format": "integer"
        },
        "insertedIds": {
          "items": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          }
        }
      }
    }, 
    "saveFileMultiple": {
      "required": [],
      "properties": {
        "result": {
          "properties": {
            "ok": {
              "type": "integer",
              "description": "Insertion status",
              "format": "integer"
            },
            "n": {
              "type": "integer",
              "description": "No of document Inserted",
              "format": "integer"
            }
          }
        },
        "ops": {
          "items": {
            "properties": {
            }
          }
        },
        "insertedCount": {
          "type": "integer",
          "description": "Insertion Count",
          "format": "integer"
        },
        "insertedIds": {
          "items": {
            "type": "string",
            "description": "Hash",
            "format": "string"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
